

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Nov 21 06:46:08 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           ; Version 1.44
    48                           ; Generated 14/09/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F46K22 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	smallconst
    83  001000                     __psmallconst:
    84                           	opt stack 0
    85  001000  00                 	db	0
    86  001001                     _dpowers:
    87                           	opt stack 0
    88  001001  0001               	dw	1
    89  001003  000A               	dw	10
    90  001005  0064               	dw	100
    91  001007  03E8               	dw	1000
    92  001009  2710               	dw	10000
    93  00100B                     __end_of_dpowers:
    94                           	opt stack 0
    95  00100B                     STR_1:
    96  00100B  23                 	db	35
    97  00100C  30                 	db	48	;'0'
    98  00100D  78                 	db	120	;'x'
    99  00100E  31                 	db	49	;'1'
   100  00100F  3A                 	db	58	;':'
   101  001010  33                 	db	51	;'3'
   102  001011  34                 	db	52	;'4'
   103  001012  33                 	db	51	;'3'
   104  001013  00                 	db	0
   105  001014                     STR_2:
   106  001014  41                 	db	65	;'A'
   107  001015  44                 	db	68	;'D'
   108  001016  43                 	db	67	;'C'
   109  001017  3A                 	db	58	;':'
   110  001018  20                 	db	32
   111  001019  25                 	db	37
   112  00101A  64                 	db	100	;'d'
   113  00101B  00                 	db	0
   114                           
   115                           ; #config settings
   116  00101C  00                 	db	0	; dummy byte at the end
   117  0000                     
   118                           	psect	nvCOMRAM
   119  000045                     __pnvCOMRAM:
   120                           	opt stack 0
   121  000045                     _timer0ReloadVal:
   122                           	opt stack 0
   123  000045                     	ds	2
   124  000047                     _TMR0_InterruptHandler:
   125                           	opt stack 0
   126  000047                     	ds	2
   127  000049                     _eusart1TxBufferRemaining:
   128                           	opt stack 0
   129  000049                     	ds	1
   130  0000                     _ANSELA	set	3896
   131  0000                     _ANSELE	set	3900
   132  0000                     _ANSELD	set	3899
   133  0000                     _ANSELB	set	3897
   134  0000                     _ANSELC	set	3898
   135  0000                     _ADCON0bits	set	4034
   136  0000                     _ADRESH	set	4036
   137  0000                     _ADRESL	set	4035
   138  0000                     _ADCON2	set	4032
   139  0000                     _ADCON1	set	4033
   140  0000                     _ADCON0	set	4034
   141  0000                     _T0CONbits	set	4053
   142  0000                     _TMR0L	set	4054
   143  0000                     _TMR0H	set	4055
   144  0000                     _T0CON	set	4053
   145  0000                     _LATDbits	set	3980
   146  0000                     _PORTBbits	set	3969
   147  0000                     _RCREG1	set	4014
   148  0000                     _RCSTA1bits	set	4011
   149  0000                     _TXREG1	set	4013
   150  0000                     _SPBRGH1	set	4016
   151  0000                     _SPBRG1	set	4015
   152  0000                     _TXSTA1	set	4012
   153  0000                     _RCSTA1	set	4011
   154  0000                     _BAUDCON1	set	4024
   155  0000                     _PIR1bits	set	3998
   156  0000                     _PIE1bits	set	3997
   157  0000                     _INTCONbits	set	4082
   158  0000                     _IPR1bits	set	3999
   159  0000                     _RCONbits	set	4048
   160  0000                     _OSCTUNE	set	3995
   161  0000                     _OSCCON2	set	4050
   162  0000                     _OSCCON	set	4051
   163  0000                     _INTCON2bits	set	4081
   164  0000                     _WPUB	set	3937
   165  0000                     _TRISD	set	3989
   166  0000                     _TRISC	set	3988
   167  0000                     _TRISB	set	3987
   168  0000                     _TRISA	set	3986
   169  0000                     _TRISE	set	3990
   170  0000                     _LATC	set	3979
   171  0000                     _LATB	set	3978
   172  0000                     _LATA	set	3977
   173  0000                     _LATD	set	3980
   174  0000                     _LATE	set	3981
   175                           
   176                           	psect	cinit
   177  001716                     __pcinit:
   178                           	opt stack 0
   179  001716                     start_initialization:
   180                           	opt stack 0
   181  001716                     __initialization:
   182                           	opt stack 0
   183                           
   184                           ; Clear objects allocated to COMRAM (23 bytes)
   185  001716  EE00  F02E         	lfsr	0,__pbssCOMRAM
   186  00171A  0E17               	movlw	23
   187  00171C                     clear_0:
   188  00171C  6AEE               	clrf	postinc0,c
   189  00171E  06E8               	decf	wreg,f,c
   190  001720  E1FD               	bnz	clear_0
   191  001722                     end_of_initialization:
   192                           	opt stack 0
   193  001722                     __end_of__initialization:
   194                           	opt stack 0
   195  001722  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   196  001724  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   197  001726  0100               	movlb	0
   198  001728  EFA1  F00B         	goto	_main	;jump to C main() function
   199                           postinc0	equ	0xFEE
   200                           wreg	equ	0xFE8
   201                           
   202                           	psect	bssCOMRAM
   203  00002E                     __pbssCOMRAM:
   204                           	opt stack 0
   205  00002E                     _eusart1RxBuffer:
   206                           	opt stack 0
   207  00002E                     	ds	8
   208  000036                     _eusart1TxBuffer:
   209                           	opt stack 0
   210  000036                     	ds	8
   211  00003E                     TMR0_ISR@CountCallBack:
   212                           	opt stack 0
   213  00003E                     	ds	2
   214  000040                     _eusart1RxCount:
   215                           	opt stack 0
   216  000040                     	ds	1
   217  000041                     _eusart1RxTail:
   218                           	opt stack 0
   219  000041                     	ds	1
   220  000042                     _eusart1RxHead:
   221                           	opt stack 0
   222  000042                     	ds	1
   223  000043                     _eusart1TxTail:
   224                           	opt stack 0
   225  000043                     	ds	1
   226  000044                     _eusart1TxHead:
   227                           	opt stack 0
   228  000044                     	ds	1
   229                           postinc0	equ	0xFEE
   230                           wreg	equ	0xFE8
   231                           
   232                           	psect	cstackBANK0
   233  000060                     __pcstackBANK0:
   234                           	opt stack 0
   235  000060                     ??_INTERRUPT_InterruptManagerLow:
   236                           
   237                           ; 1 bytes @ 0x0
   238  000060                     	ds	21
   239  000075                     ?___lwdiv:
   240                           	opt stack 0
   241  000075                     EUSART1_Write@txData:
   242                           	opt stack 0
   243  000075                     delayMs@time:
   244                           	opt stack 0
   245  000075                     TMR0_SetInterruptHandler@InterruptHandler:
   246                           	opt stack 0
   247  000075                     ___lwdiv@dividend:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x15
   251  000075                     	ds	1
   252  000076                     putch@txData:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x16
   256  000076                     	ds	1
   257  000077                     ??_TMR0_Initialize:
   258  000077                     ??_delayMs:
   259  000077                     ___lwdiv@divisor:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x17
   263  000077                     	ds	1
   264  000078                     delayMs@i:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x18
   268  000078                     	ds	1
   269  000079                     ___lwdiv@counter:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0x19
   273  000079                     	ds	1
   274  00007A                     ___lwdiv@quotient:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x1A
   278  00007A                     	ds	2
   279  00007C                     ?___lwmod:
   280                           	opt stack 0
   281  00007C                     ___lwmod@dividend:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x1C
   285  00007C                     	ds	2
   286  00007E                     ___lwmod@divisor:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x1E
   290  00007E                     	ds	2
   291  000080                     ___lwmod@counter:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x20
   295  000080                     	ds	1
   296  000081                     ?_printf:
   297                           	opt stack 0
   298  000081                     printf@f:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x21
   302  000081                     	ds	2
   303  000083                     ??_printf:
   304                           
   305                           ; 1 bytes @ 0x23
   306  000083                     	ds	1
   307  000084                     printf@ap:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x24
   311  000084                     	ds	2
   312  000086                     printf@flag:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x26
   316  000086                     	ds	1
   317  000087                     printf@prec:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x27
   321  000087                     	ds	1
   322  000088                     printf@val:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x28
   326  000088                     	ds	2
   327  00008A                     printf@c:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x2A
   331  00008A                     	ds	1
   332  00008B                     ??_app:
   333                           
   334                           ; 1 bytes @ 0x2B
   335  00008B                     	ds	1
   336  00008C                     postinc0	equ	0xFEE
   337                           wreg	equ	0xFE8
   338                           
   339                           ; 1 bytes @ 0x2C
   340                           
   341                           	psect	cstackCOMRAM
   342  000001                     __pcstackCOMRAM:
   343                           	opt stack 0
   344  000001                     ?_ADC_GetConversion:
   345                           	opt stack 0
   346  000001                     ?i2___lwdiv:
   347                           	opt stack 0
   348  000001                     i2EUSART1_Write@txData:
   349                           	opt stack 0
   350  000001                     i2___lwdiv@dividend:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0x0
   354  000001                     	ds	1
   355  000002                     i2putch@txData:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x1
   359  000002                     	ds	1
   360  000003                     ??_ADC_GetConversion:
   361  000003                     i2___lwdiv@divisor:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x2
   365  000003                     	ds	2
   366  000005                     ADC_GetConversion@channel:
   367                           	opt stack 0
   368  000005                     i2___lwdiv@quotient:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x4
   372  000005                     	ds	2
   373  000007                     i2___lwdiv@counter:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x6
   377  000007                     	ds	1
   378  000008                     ?i2___lwmod:
   379                           	opt stack 0
   380  000008                     i2___lwmod@dividend:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x7
   384  000008                     	ds	2
   385  00000A                     i2___lwmod@divisor:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x9
   389  00000A                     	ds	2
   390  00000C                     i2___lwmod@counter:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0xB
   394  00000C                     	ds	1
   395  00000D                     ?i2_printf:
   396                           	opt stack 0
   397  00000D                     i2printf@f:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0xC
   401  00000D                     	ds	4
   402  000011                     ??i2_printf:
   403                           
   404                           ; 1 bytes @ 0x10
   405  000011                     	ds	1
   406  000012                     i2printf@ap:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x11
   410  000012                     	ds	2
   411  000014                     i2printf@flag:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x13
   415  000014                     	ds	1
   416  000015                     i2printf@prec:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x14
   420  000015                     	ds	1
   421  000016                     i2printf@val:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x15
   425  000016                     	ds	2
   426  000018                     i2printf@c:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x17
   430  000018                     	ds	1
   431  000019                     ??_TMR0_CallBack:
   432                           
   433                           ; 1 bytes @ 0x18
   434  000019                     	ds	1
   435  00001A                     TMR0_CallBack@adcresult:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x19
   439  00001A                     	ds	2
   440  00001C                     ??_INTERRUPT_InterruptManagerHigh:
   441                           
   442                           ; 1 bytes @ 0x1B
   443  00001C                     	ds	18
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           
   447 ;;
   448 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   449 ;;
   450 ;; *************** function _main *****************
   451 ;; Defined at:
   452 ;;		line 51 in file "main.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels required when called:   12
   472 ;; This function calls:
   473 ;;		_SYSTEM_Initialize
   474 ;;		_app
   475 ;; This function is called by:
   476 ;;		Startup code after reset
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text0
   481  001742                     __ptext0:
   482                           	opt stack 0
   483  001742                     _main:
   484                           	opt stack 19
   485                           
   486                           ;main.c: 54: SYSTEM_Initialize();
   487                           
   488                           ;incstack = 0
   489  001742  EC7E  F00B         	call	_SYSTEM_Initialize	;wreg free
   490                           
   491                           ;main.c: 61: (INTCONbits.GIEH = 1);
   492  001746  8EF2               	bsf	intcon,7,c	;volatile
   493                           
   494                           ;main.c: 64: (INTCONbits.GIEL = 1);
   495  001748  8CF2               	bsf	intcon,6,c	;volatile
   496  00174A                     
   497                           ;main.c: 85: {
   498                           ;main.c: 86: app();
   499  00174A  EC9B  F00A         	call	_app	;wreg free
   500  00174E  D7FD               	goto	l182
   501  001750                     __end_of_main:
   502                           	opt stack 0
   503                           intcon	equ	0xFF2
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           
   507 ;; *************** function _app *****************
   508 ;; Defined at:
   509 ;;		line 4 in file "app.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;Total ram usage:        1 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:   11
   530 ;; This function calls:
   531 ;;		_delayMs
   532 ;;		_printf
   533 ;; This function is called by:
   534 ;;		_main
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text1
   539  001536                     __ptext1:
   540                           	opt stack 0
   541  001536                     _app:
   542                           	opt stack 19
   543                           
   544                           ;app.c: 6: if(PORTBbits.RB0 == 0)
   545                           
   546                           ;incstack = 0
   547  001536  B081               	btfsc	3969,0,c	;volatile
   548  001538  0012               	return	
   549                           
   550                           ;app.c: 7: {
   551                           ;app.c: 8: printf("#0x1:343");
   552  00153A  0E0B               	movlw	low STR_1
   553  00153C  0100               	movlb	0	; () banked
   554  00153E  6F81               	movwf	printf@f& (0+255),b
   555  001540  0E10               	movlw	high STR_1
   556  001542  6F82               	movwf	(printf@f+1)& (0+255),b
   557  001544  EC0F  F008         	call	_printf	;wreg free
   558                           
   559                           ;app.c: 12: do { LATDbits.LATD0 = ~LATDbits.LATD0; } while(0);
   560  001548  A08C               	btfss	3980,0,c	;volatile
   561  00154A  D002               	goto	u1240
   562  00154C  0E01               	movlw	1
   563  00154E  D001               	goto	u1246
   564  001550                     u1240:
   565  001550  0E00               	movlw	0
   566  001552                     u1246:
   567  001552  0AFF               	xorlw	255
   568  001554  0100               	movlb	0	; () banked
   569  001556  6F8B               	movwf	??_app& (0+255),b
   570  001558  508C               	movf	3980,w,c	;volatile
   571  00155A  198B               	xorwf	??_app& (0+255),w,b
   572  00155C  0BFE               	andlw	-2
   573  00155E  198B               	xorwf	??_app& (0+255),w,b
   574  001560  6E8C               	movwf	3980,c	;volatile
   575                           
   576                           ; BSR set to: 0
   577                           ;app.c: 13: delayMs(500);
   578                           
   579                           ; BSR set to: 0
   580  001562  0E01               	movlw	1
   581  001564  6F76               	movwf	(delayMs@time+1)& (0+255),b
   582  001566  0EF4               	movlw	244
   583  001568  6F75               	movwf	delayMs@time& (0+255),b
   584  00156A  EC0C  F00B         	call	_delayMs	;wreg free
   585  00156E  0012               	return	
   586  001570                     __end_of_app:
   587                           	opt stack 0
   588                           intcon	equ	0xFF2
   589                           postinc0	equ	0xFEE
   590                           wreg	equ	0xFE8
   591                           
   592 ;; *************** function _printf *****************
   593 ;; Defined at:
   594 ;;		line 464 in file "/Applications/microchip/xc8/v1.44/sources/common/doprnt.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  f               2   33[BANK0 ] PTR const unsigned char 
   597 ;;		 -> STR_2(8), STR_1(9), 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  tmpval          4    0        struct .
   600 ;;  cp              3    0        PTR const unsigned char 
   601 ;;  val             2   40[BANK0 ] unsigned int 
   602 ;;  ap              2   36[BANK0 ] PTR void [1]
   603 ;;		 -> ?i2_printf(2), ?_printf(2), 
   604 ;;  len             2    0        unsigned int 
   605 ;;  c               1   42[BANK0 ] char 
   606 ;;  prec            1   39[BANK0 ] char 
   607 ;;  flag            1   38[BANK0 ] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  2   33[BANK0 ] int 
   610 ;; Registers used:
   611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   617 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;Total ram usage:       10 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:   10
   624 ;; This function calls:
   625 ;;		___lwdiv
   626 ;;		___lwmod
   627 ;;		_putch
   628 ;; This function is called by:
   629 ;;		_app
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text2
   634  00101E                     __ptext2:
   635                           	opt stack 0
   636  00101E                     _printf:
   637                           	opt stack 19
   638                           
   639                           ;doprnt.c: 466: va_list ap;
   640                           ;doprnt.c: 499: signed char c;
   641                           ;doprnt.c: 506: signed char prec;
   642                           ;doprnt.c: 508: unsigned char flag;
   643                           ;doprnt.c: 523: union {
   644                           ;doprnt.c: 524: unsigned long vd;
   645                           ;doprnt.c: 525: double integ;
   646                           ;doprnt.c: 526: } tmpval;
   647                           ;doprnt.c: 528: unsigned int val;
   648                           ;doprnt.c: 529: unsigned len;
   649                           ;doprnt.c: 530: const char * cp;
   650                           ;doprnt.c: 533: *ap = __va_start();
   651                           
   652                           ;incstack = 0
   653  00101E  0E83               	movlw	low (?_printf+2)
   654  001020  0100               	movlb	0	; () banked
   655  001022  6F84               	movwf	printf@ap& (0+255),b
   656  001024  0E00               	movlw	high (?_printf+2)
   657  001026  6F85               	movwf	(printf@ap+1)& (0+255),b
   658                           
   659                           ;doprnt.c: 536: while(c = *f++) {
   660  001028  D089               	goto	u1190
   661  00102A                     
   662                           ; BSR set to: 0
   663                           ;doprnt.c: 538: if(c != '%')
   664                           
   665                           ; BSR set to: 0
   666  00102A  0E25               	movlw	37
   667  00102C  198A               	xorwf	printf@c& (0+255),w,b
   668  00102E  B4D8               	btfsc	status,2,c
   669  001030  D004               	goto	l317
   670                           
   671                           ; BSR set to: 0
   672                           ;doprnt.c: 540: {
   673                           ;doprnt.c: 541: (putch(c) );
   674  001032  518A               	movf	printf@c& (0+255),w,b
   675  001034  ECA8  F00B         	call	_putch
   676                           
   677                           ;doprnt.c: 542: continue;
   678  001038  D081               	goto	u1190
   679  00103A                     l317:
   680                           
   681                           ;doprnt.c: 543: }
   682                           ;doprnt.c: 548: flag = 0;
   683  00103A  0E00               	movlw	0
   684  00103C  0100               	movlb	0	; () banked
   685  00103E  6F86               	movwf	printf@flag& (0+255),b
   686                           
   687                           ; BSR set to: 0
   688                           
   689                           ; BSR set to: 0
   690                           
   691                           ; BSR set to: 0
   692                           ;doprnt.c: 822: }
   693                           
   694                           ; BSR set to: 0
   695                           ;doprnt.c: 813: continue;
   696                           
   697                           ;doprnt.c: 802: default:
   698                           
   699                           ; BSR set to: 0
   700                           ;doprnt.c: 698: case 'i':
   701                           ;doprnt.c: 699: break;
   702                           
   703                           ; BSR set to: 0
   704                           
   705                           ;doprnt.c: 697: case 'd':
   706                           
   707                           ; BSR set to: 0
   708                           ;doprnt.c: 638: goto alldone;
   709                           
   710                           ;doprnt.c: 637: case 0:
   711                           
   712                           ;doprnt.c: 635: switch(c = *f++) {
   713  001040  C081  FFF6         	movff	printf@f,tblptrl
   714  001044  C082  FFF7         	movff	printf@f+1,tblptrh
   715  001048  4B81               	infsnz	printf@f& (0+255),f,b
   716  00104A  2B82               	incf	(printf@f+1)& (0+255),f,b
   717  00104C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   718  00104C  6AF8               	clrf	tblptru,c
   719  00104E                     	endif
   720  00104E                     	if	0	;tblptru may be non-zero
   721  00104E                     	endif
   722  00104E  0008               	tblrd		*
   723  001050  CFF5 F08A          	movff	tablat,printf@c
   724  001054  518A               	movf	printf@c& (0+255),w,b
   725                           
   726                           ; Switch size 1, requested type "space"
   727                           ; Number of cases is 3, Range of values is 0 to 105
   728                           ; switch strategies available:
   729                           ; Name         Instructions Cycles
   730                           ; simple_byte           10     6 (average)
   731                           ;	Chosen strategy is simple_byte
   732  001056  0A00               	xorlw	0	; case 0
   733  001058  B4D8               	btfsc	status,2,c
   734  00105A  0012               	return	
   735  00105C  0A64               	xorlw	100	; case 100
   736  00105E  B4D8               	btfsc	status,2,c
   737  001060  D003               	goto	l323
   738  001062  0A0D               	xorlw	13	; case 105
   739  001064  A4D8               	btfss	status,2,c
   740  001066  D06A               	goto	u1190
   741  001068                     l323:
   742                           
   743                           ; BSR set to: 0
   744                           ;doprnt.c: 1253: {
   745                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   746                           
   747                           ; BSR set to: 0
   748  001068  C084  FFD9         	movff	printf@ap,fsr2l
   749  00106C  C085  FFDA         	movff	printf@ap+1,fsr2h
   750  001070  CFDE F088          	movff	postinc2,printf@val
   751  001074  CFDD F089          	movff	postdec2,printf@val+1
   752                           
   753                           ; BSR set to: 0
   754  001078  0E02               	movlw	2
   755  00107A  2784               	addwf	printf@ap& (0+255),f,b
   756  00107C  0E00               	movlw	0
   757  00107E  2385               	addwfc	(printf@ap+1)& (0+255),f,b
   758                           
   759                           ; BSR set to: 0
   760                           ;doprnt.c: 1261: if((int)val < 0) {
   761  001080  AF89               	btfss	(printf@val+1)& (0+255),7,b
   762  001082  D006               	goto	l325
   763                           
   764                           ; BSR set to: 0
   765                           ;doprnt.c: 1262: flag |= 0x03;
   766  001084  0E03               	movlw	3
   767  001086  1386               	iorwf	printf@flag& (0+255),f,b
   768                           
   769                           ; BSR set to: 0
   770                           ;doprnt.c: 1263: val = -val;
   771  001088  6D88               	negf	printf@val& (0+255),b
   772  00108A  1F89               	comf	(printf@val+1)& (0+255),f,b
   773  00108C  B0D8               	btfsc	status,0,c
   774  00108E  2B89               	incf	(printf@val+1)& (0+255),f,b
   775  001090                     l325:
   776                           
   777                           ; BSR set to: 0
   778                           ;doprnt.c: 1264: }
   779                           ;doprnt.c: 1266: }
   780                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   781                           
   782                           ; BSR set to: 0
   783  001090  0E01               	movlw	1
   784  001092  6F8A               	movwf	printf@c& (0+255),b
   785  001094                     l1808:
   786                           
   787                           ; BSR set to: 0
   788  001094  0E05               	movlw	5
   789  001096  198A               	xorwf	printf@c& (0+255),w,b
   790  001098  B4D8               	btfsc	status,2,c
   791  00109A  D015               	goto	u1170
   792                           
   793                           ; BSR set to: 0
   794                           ;doprnt.c: 1306: if(val < dpowers[c])
   795                           
   796                           ; BSR set to: 0
   797                           
   798                           ; BSR set to: 0
   799  00109C  518A               	movf	printf@c& (0+255),w,b
   800  00109E  0D02               	mullw	2
   801  0010A0  0E01               	movlw	low _dpowers
   802  0010A2  24F3               	addwf	prodl,w,c
   803  0010A4  6EF6               	movwf	tblptrl,c
   804  0010A6  0E10               	movlw	high _dpowers
   805  0010A8  20F4               	addwfc	prodh,w,c
   806  0010AA  6EF7               	movwf	tblptrh,c
   807  0010AC                     	if	1	;There are 3 active tblptr bytes
   808  0010AC  6AF8               	clrf	tblptru,c
   809  0010AE  0E00               	movlw	low (__mediumconst shr (0+16))
   810  0010B0  22F8               	addwfc	tblptru,f,c
   811  0010B2                     	endif
   812  0010B2  0009               	tblrd		*+
   813  0010B4  50F5               	movf	tablat,w,c
   814  0010B6  5D88               	subwf	printf@val& (0+255),w,b
   815  0010B8  0009               	tblrd		*+
   816  0010BA  50F5               	movf	tablat,w,c
   817  0010BC  5989               	subwfb	(printf@val+1)& (0+255),w,b
   818  0010BE  A0D8               	btfss	status,0,c
   819  0010C0  D002               	goto	u1170
   820                           
   821                           ; BSR set to: 0
   822                           
   823                           ; BSR set to: 0
   824                           
   825                           ; BSR set to: 0
   826                           ;doprnt.c: 1307: break;
   827  0010C2  2B8A               	incf	printf@c& (0+255),f,b
   828  0010C4  D7E7               	goto	l1808
   829  0010C6                     u1170:
   830                           
   831                           ; BSR set to: 0
   832                           ;doprnt.c: 1422: {
   833                           ;doprnt.c: 1438: if(flag & 0x03)
   834                           
   835                           ; BSR set to: 0
   836  0010C6  C086  F083         	movff	printf@flag,??_printf
   837  0010CA  0E03               	movlw	3
   838  0010CC  1783               	andwf	??_printf& (0+255),f,b
   839  0010CE  B4D8               	btfsc	status,2,c
   840  0010D0  D003               	goto	l329
   841                           
   842                           ; BSR set to: 0
   843                           ;doprnt.c: 1439: (putch('-') );
   844  0010D2  0E2D               	movlw	45
   845  0010D4  ECA8  F00B         	call	_putch
   846  0010D8                     l329:
   847                           
   848                           ;doprnt.c: 1469: }
   849                           ;doprnt.c: 1472: prec = c;
   850  0010D8  C08A  F087         	movff	printf@c,printf@prec
   851                           
   852                           ;doprnt.c: 1474: while(prec--) {
   853  0010DC  D02A               	goto	l330
   854  0010DE                     
   855                           ;doprnt.c: 1478: {
   856                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   857  0010DE  0100               	movlb	0	; () banked
   858  0010E0  5187               	movf	printf@prec& (0+255),w,b
   859  0010E2  0D02               	mullw	2
   860  0010E4  0E01               	movlw	low _dpowers
   861  0010E6  24F3               	addwf	prodl,w,c
   862  0010E8  6EF6               	movwf	tblptrl,c
   863  0010EA  0E10               	movlw	high _dpowers
   864  0010EC  20F4               	addwfc	prodh,w,c
   865  0010EE  6EF7               	movwf	tblptrh,c
   866  0010F0                     	if	1	;There are 3 active tblptr bytes
   867  0010F0  6AF8               	clrf	tblptru,c
   868  0010F2  0E00               	movlw	low (__mediumconst shr (0+16))
   869  0010F4  22F8               	addwfc	tblptru,f,c
   870  0010F6                     	endif
   871  0010F6  0009               	tblrd		*+
   872  0010F8  CFF5 F077          	movff	tablat,___lwdiv@divisor
   873  0010FC  000A               	tblrd		*-
   874  0010FE  CFF5 F078          	movff	tablat,___lwdiv@divisor+1
   875  001102  C088  F075         	movff	printf@val,___lwdiv@dividend
   876  001106  C089  F076         	movff	printf@val+1,___lwdiv@dividend+1
   877  00110A  ECC6  F009         	call	___lwdiv	;wreg free
   878  00110E  C075  F07C         	movff	?___lwdiv,___lwmod@dividend
   879  001112  C076  F07D         	movff	?___lwdiv+1,___lwmod@dividend+1
   880  001116  0E00               	movlw	0
   881  001118  0100               	movlb	0	; () banked
   882  00111A  6F7F               	movwf	(___lwmod@divisor+1)& (0+255),b
   883  00111C  0E0A               	movlw	10
   884  00111E  6F7E               	movwf	___lwmod@divisor& (0+255),b
   885  001120  EC19  F00A         	call	___lwmod	;wreg free
   886  001124  0100               	movlb	0	; () banked
   887  001126  517C               	movf	?___lwmod& (0+255),w,b
   888  001128  0F30               	addlw	48
   889  00112A  6F8A               	movwf	printf@c& (0+255),b
   890                           
   891                           ; BSR set to: 0
   892                           ;doprnt.c: 1523: }
   893                           ;doprnt.c: 1524: (putch(c) );
   894  00112C  518A               	movf	printf@c& (0+255),w,b
   895  00112E  ECA8  F00B         	call	_putch
   896  001132                     l330:
   897  001132  0100               	movlb	0	; () banked
   898  001134  0787               	decf	printf@prec& (0+255),f,b
   899  001136  2987               	incf	printf@prec& (0+255),w,b
   900  001138  A4D8               	btfss	status,2,c
   901  00113A  D7D1               	goto	l331
   902  00113C                     u1190:
   903                           
   904                           ; BSR set to: 0
   905                           
   906                           ; BSR set to: 0
   907  00113C  C081  FFF6         	movff	printf@f,tblptrl
   908  001140  C082  FFF7         	movff	printf@f+1,tblptrh
   909  001144  0100               	movlb	0	; () banked
   910  001146  4B81               	infsnz	printf@f& (0+255),f,b
   911  001148  2B82               	incf	(printf@f+1)& (0+255),f,b
   912  00114A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   913  00114A  6AF8               	clrf	tblptru,c
   914  00114C                     	endif
   915  00114C                     	if	0	;tblptru may be non-zero
   916  00114C                     	endif
   917  00114C  0008               	tblrd		*
   918  00114E  CFF5 F08A          	movff	tablat,printf@c
   919  001152  518A               	movf	printf@c& (0+255),w,b
   920  001154  B4D8               	btfsc	status,2,c
   921  001156  0012               	return	
   922  001158  D768               	goto	l316
   923  00115A                     __end_of_printf:
   924                           	opt stack 0
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           prodh	equ	0xFF4
   930                           prodl	equ	0xFF3
   931                           intcon	equ	0xFF2
   932                           postinc0	equ	0xFEE
   933                           wreg	equ	0xFE8
   934                           postinc2	equ	0xFDE
   935                           postdec2	equ	0xFDD
   936                           fsr2h	equ	0xFDA
   937                           fsr2l	equ	0xFD9
   938                           status	equ	0xFD8
   939                           
   940 ;; *************** function _putch *****************
   941 ;; Defined at:
   942 ;;		line 160 in file "mcc_generated_files/eusart1.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  txData          1    wreg     unsigned char 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  txData          1   22[BANK0 ] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;Total ram usage:        1 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    9
   963 ;; This function calls:
   964 ;;		_EUSART1_Write
   965 ;; This function is called by:
   966 ;;		_printf
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           	psect	text3
   971  001750                     __ptext3:
   972                           	opt stack 0
   973  001750                     _putch:
   974                           	opt stack 19
   975                           
   976                           ; BSR set to: 0
   977                           ;incstack = 0
   978                           ;putch@txData stored from wreg
   979  001750  0100               	movlb	0	; () banked
   980  001752  6F76               	movwf	putch@txData& (0+255),b
   981                           
   982                           ;eusart1.c: 162: EUSART1_Write(txData);
   983  001754  0100               	movlb	0	; () banked
   984  001756  5176               	movf	putch@txData& (0+255),w,b
   985  001758  EC7D  F00A         	call	_EUSART1_Write
   986  00175C  0012               	return		;funcret
   987  00175E                     __end_of_putch:
   988                           	opt stack 0
   989                           tblptru	equ	0xFF8
   990                           tblptrh	equ	0xFF7
   991                           tblptrl	equ	0xFF6
   992                           tablat	equ	0xFF5
   993                           prodh	equ	0xFF4
   994                           prodl	equ	0xFF3
   995                           intcon	equ	0xFF2
   996                           postinc0	equ	0xFEE
   997                           wreg	equ	0xFE8
   998                           postinc2	equ	0xFDE
   999                           postdec2	equ	0xFDD
  1000                           fsr2h	equ	0xFDA
  1001                           fsr2l	equ	0xFD9
  1002                           status	equ	0xFD8
  1003                           
  1004 ;; *************** function _EUSART1_Write *****************
  1005 ;; Defined at:
  1006 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  txData          1    wreg     unsigned char 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  txData          1   21[BANK0 ] unsigned char 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;Total ram usage:        1 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    8
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_putch
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text4
  1035  0014FA                     __ptext4:
  1036                           	opt stack 0
  1037  0014FA                     _EUSART1_Write:
  1038                           	opt stack 19
  1039                           
  1040                           ;incstack = 0
  1041                           ;EUSART1_Write@txData stored from wreg
  1042  0014FA  0100               	movlb	0	; () banked
  1043  0014FC  6F75               	movwf	EUSART1_Write@txData& (0+255),b
  1044  0014FE                     
  1045                           ;eusart1.c: 135: {
  1046                           
  1047                           ;eusart1.c: 134: while(0 == eusart1TxBufferRemaining)
  1048  0014FE  5049               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  1049  001500  B4D8               	btfsc	status,2,c
  1050  001502  D7FD               	goto	l1684
  1051                           
  1052                           ;eusart1.c: 136: }
  1053                           ;eusart1.c: 138: if(0 == PIE1bits.TX1IE)
  1054  001504  B89D               	btfsc	3997,4,c	;volatile
  1055  001506  D003               	goto	l151
  1056                           
  1057                           ;eusart1.c: 139: {
  1058                           ;eusart1.c: 140: TXREG1 = txData;
  1059  001508  C075  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1060                           
  1061                           ;eusart1.c: 141: }
  1062  00150C  D012               	goto	l152
  1063  00150E                     l151:
  1064                           
  1065                           ;eusart1.c: 142: else
  1066                           ;eusart1.c: 143: {
  1067                           ;eusart1.c: 144: PIE1bits.TX1IE = 0;
  1068  00150E  989D               	bcf	3997,4,c	;volatile
  1069                           
  1070                           ;eusart1.c: 145: eusart1TxBuffer[eusart1TxHead++] = txData;
  1071  001510  5044               	movf	_eusart1TxHead,w,c	;volatile
  1072  001512  0D01               	mullw	1
  1073  001514  0E36               	movlw	low _eusart1TxBuffer
  1074  001516  24F3               	addwf	prodl,w,c
  1075  001518  6ED9               	movwf	fsr2l,c
  1076  00151A  0E00               	movlw	high _eusart1TxBuffer
  1077  00151C  20F4               	addwfc	prodh,w,c
  1078  00151E  6EDA               	movwf	fsr2h,c
  1079  001520  C075  FFDF         	movff	EUSART1_Write@txData,indf2
  1080  001524  2A44               	incf	_eusart1TxHead,f,c	;volatile
  1081                           
  1082                           ;eusart1.c: 146: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1083  001526  0E07               	movlw	7
  1084  001528  6444               	cpfsgt	_eusart1TxHead,c	;volatile
  1085  00152A  D002               	goto	l153
  1086                           
  1087                           ;eusart1.c: 147: {
  1088                           ;eusart1.c: 148: eusart1TxHead = 0;
  1089  00152C  0E00               	movlw	0
  1090  00152E  6E44               	movwf	_eusart1TxHead,c	;volatile
  1091  001530                     l153:
  1092                           
  1093                           ;eusart1.c: 149: }
  1094                           ;eusart1.c: 150: eusart1TxBufferRemaining--;
  1095  001530  0649               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1096  001532                     l152:
  1097                           
  1098                           ;eusart1.c: 151: }
  1099                           ;eusart1.c: 152: PIE1bits.TX1IE = 1;
  1100  001532  889D               	bsf	3997,4,c	;volatile
  1101  001534  0012               	return		;funcret
  1102  001536                     __end_of_EUSART1_Write:
  1103                           	opt stack 0
  1104                           tblptru	equ	0xFF8
  1105                           tblptrh	equ	0xFF7
  1106                           tblptrl	equ	0xFF6
  1107                           tablat	equ	0xFF5
  1108                           prodh	equ	0xFF4
  1109                           prodl	equ	0xFF3
  1110                           intcon	equ	0xFF2
  1111                           postinc0	equ	0xFEE
  1112                           wreg	equ	0xFE8
  1113                           indf2	equ	0xFDF
  1114                           postinc2	equ	0xFDE
  1115                           postdec2	equ	0xFDD
  1116                           fsr2h	equ	0xFDA
  1117                           fsr2l	equ	0xFD9
  1118                           status	equ	0xFD8
  1119                           
  1120 ;; *************** function ___lwmod *****************
  1121 ;; Defined at:
  1122 ;;		line 8 in file "/Applications/microchip/xc8/v1.44/sources/common/lwmod.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  dividend        2   28[BANK0 ] unsigned int 
  1125 ;;  divisor         2   30[BANK0 ] unsigned int 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  counter         1   32[BANK0 ] unsigned char 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  2   28[BANK0 ] unsigned int 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1137 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;Total ram usage:        5 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    8
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_printf
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text5
  1152  001432                     __ptext5:
  1153                           	opt stack 0
  1154  001432                     ___lwmod:
  1155                           	opt stack 20
  1156                           
  1157                           ;incstack = 0
  1158  001432  0100               	movlb	0	; () banked
  1159  001434  517E               	movf	___lwmod@divisor& (0+255),w,b
  1160  001436  117F               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1161  001438  B4D8               	btfsc	status,2,c
  1162  00143A  D018               	goto	l753
  1163                           
  1164                           ; BSR set to: 0
  1165  00143C  0E01               	movlw	1
  1166  00143E  6F80               	movwf	___lwmod@counter& (0+255),b
  1167  001440  D004               	goto	l748
  1168  001442                     
  1169                           ; BSR set to: 0
  1170                           
  1171                           ; BSR set to: 0
  1172  001442  90D8               	bcf	status,0,c
  1173  001444  377E               	rlcf	___lwmod@divisor& (0+255),f,b
  1174  001446  377F               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1175  001448  2B80               	incf	___lwmod@counter& (0+255),f,b
  1176  00144A                     l748:
  1177                           
  1178                           ; BSR set to: 0
  1179                           
  1180                           ; BSR set to: 0
  1181  00144A  AF7F               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1182  00144C  D7FA               	goto	l749
  1183  00144E                     u1100:
  1184                           
  1185                           ; BSR set to: 0
  1186                           
  1187                           ; BSR set to: 0
  1188                           
  1189                           ; BSR set to: 0
  1190  00144E  517E               	movf	___lwmod@divisor& (0+255),w,b
  1191  001450  5D7C               	subwf	___lwmod@dividend& (0+255),w,b
  1192  001452  517F               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1193  001454  597D               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1194  001456  A0D8               	btfss	status,0,c
  1195  001458  D004               	goto	l752
  1196                           
  1197                           ; BSR set to: 0
  1198  00145A  517E               	movf	___lwmod@divisor& (0+255),w,b
  1199  00145C  5F7C               	subwf	___lwmod@dividend& (0+255),f,b
  1200  00145E  517F               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1201  001460  5B7D               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1202  001462                     l752:
  1203                           
  1204                           ; BSR set to: 0
  1205                           
  1206                           ; BSR set to: 0
  1207  001462  90D8               	bcf	status,0,c
  1208  001464  337F               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1209  001466  337E               	rrcf	___lwmod@divisor& (0+255),f,b
  1210                           
  1211                           ; BSR set to: 0
  1212  001468  2F80               	decfsz	___lwmod@counter& (0+255),f,b
  1213  00146A  D7F1               	goto	u1100
  1214  00146C                     l753:
  1215                           
  1216                           ; BSR set to: 0
  1217                           
  1218                           ; BSR set to: 0
  1219  00146C  C07C  F07C         	movff	___lwmod@dividend,?___lwmod
  1220  001470  C07D  F07D         	movff	___lwmod@dividend+1,?___lwmod+1
  1221                           
  1222                           ; BSR set to: 0
  1223  001474  0012               	return		;funcret
  1224  001476                     __end_of___lwmod:
  1225                           	opt stack 0
  1226                           tblptru	equ	0xFF8
  1227                           tblptrh	equ	0xFF7
  1228                           tblptrl	equ	0xFF6
  1229                           tablat	equ	0xFF5
  1230                           prodh	equ	0xFF4
  1231                           prodl	equ	0xFF3
  1232                           intcon	equ	0xFF2
  1233                           postinc0	equ	0xFEE
  1234                           wreg	equ	0xFE8
  1235                           indf2	equ	0xFDF
  1236                           postinc2	equ	0xFDE
  1237                           postdec2	equ	0xFDD
  1238                           fsr2h	equ	0xFDA
  1239                           fsr2l	equ	0xFD9
  1240                           status	equ	0xFD8
  1241                           
  1242 ;; *************** function ___lwdiv *****************
  1243 ;; Defined at:
  1244 ;;		line 8 in file "/Applications/microchip/xc8/v1.44/sources/common/lwdiv.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  dividend        2   21[BANK0 ] unsigned int 
  1247 ;;  divisor         2   23[BANK0 ] unsigned int 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  quotient        2   26[BANK0 ] unsigned int 
  1250 ;;  counter         1   25[BANK0 ] unsigned char 
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  2   21[BANK0 ] unsigned int 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1260 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;Total ram usage:        7 bytes
  1265 ;; Hardware stack levels used:    1
  1266 ;; Hardware stack levels required when called:    8
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_printf
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text6
  1275  00138C                     __ptext6:
  1276                           	opt stack 0
  1277  00138C                     ___lwdiv:
  1278                           	opt stack 20
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;incstack = 0
  1282  00138C  0E00               	movlw	0
  1283  00138E  0100               	movlb	0	; () banked
  1284  001390  6F7B               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1285  001392  0E00               	movlw	0
  1286  001394  6F7A               	movwf	___lwdiv@quotient& (0+255),b
  1287                           
  1288                           ; BSR set to: 0
  1289  001396  5177               	movf	___lwdiv@divisor& (0+255),w,b
  1290  001398  1178               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1291  00139A  B4D8               	btfsc	status,2,c
  1292  00139C  D01C               	goto	l743
  1293                           
  1294                           ; BSR set to: 0
  1295  00139E  0E01               	movlw	1
  1296  0013A0  6F79               	movwf	___lwdiv@counter& (0+255),b
  1297  0013A2  D004               	goto	l738
  1298  0013A4                     
  1299                           ; BSR set to: 0
  1300                           
  1301                           ; BSR set to: 0
  1302  0013A4  90D8               	bcf	status,0,c
  1303  0013A6  3777               	rlcf	___lwdiv@divisor& (0+255),f,b
  1304  0013A8  3778               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1305  0013AA  2B79               	incf	___lwdiv@counter& (0+255),f,b
  1306  0013AC                     l738:
  1307                           
  1308                           ; BSR set to: 0
  1309                           
  1310                           ; BSR set to: 0
  1311  0013AC  AF78               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1312  0013AE  D7FA               	goto	l739
  1313  0013B0                     u1070:
  1314                           
  1315                           ; BSR set to: 0
  1316                           
  1317                           ; BSR set to: 0
  1318                           
  1319                           ; BSR set to: 0
  1320  0013B0  90D8               	bcf	status,0,c
  1321  0013B2  377A               	rlcf	___lwdiv@quotient& (0+255),f,b
  1322  0013B4  377B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1323                           
  1324                           ; BSR set to: 0
  1325  0013B6  5177               	movf	___lwdiv@divisor& (0+255),w,b
  1326  0013B8  5D75               	subwf	___lwdiv@dividend& (0+255),w,b
  1327  0013BA  5178               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1328  0013BC  5976               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1329  0013BE  A0D8               	btfss	status,0,c
  1330  0013C0  D005               	goto	l742
  1331                           
  1332                           ; BSR set to: 0
  1333  0013C2  5177               	movf	___lwdiv@divisor& (0+255),w,b
  1334  0013C4  5F75               	subwf	___lwdiv@dividend& (0+255),f,b
  1335  0013C6  5178               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1336  0013C8  5B76               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1337                           
  1338                           ; BSR set to: 0
  1339  0013CA  817A               	bsf	___lwdiv@quotient& (0+255),0,b
  1340  0013CC                     l742:
  1341                           
  1342                           ; BSR set to: 0
  1343                           
  1344                           ; BSR set to: 0
  1345  0013CC  90D8               	bcf	status,0,c
  1346  0013CE  3378               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1347  0013D0  3377               	rrcf	___lwdiv@divisor& (0+255),f,b
  1348                           
  1349                           ; BSR set to: 0
  1350  0013D2  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  1351  0013D4  D7ED               	goto	u1070
  1352  0013D6                     l743:
  1353                           
  1354                           ; BSR set to: 0
  1355                           
  1356                           ; BSR set to: 0
  1357  0013D6  C07A  F075         	movff	___lwdiv@quotient,?___lwdiv
  1358  0013DA  C07B  F076         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1359                           
  1360                           ; BSR set to: 0
  1361  0013DE  0012               	return		;funcret
  1362  0013E0                     __end_of___lwdiv:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           tblptrh	equ	0xFF7
  1366                           tblptrl	equ	0xFF6
  1367                           tablat	equ	0xFF5
  1368                           prodh	equ	0xFF4
  1369                           prodl	equ	0xFF3
  1370                           intcon	equ	0xFF2
  1371                           postinc0	equ	0xFEE
  1372                           wreg	equ	0xFE8
  1373                           indf2	equ	0xFDF
  1374                           postinc2	equ	0xFDE
  1375                           postdec2	equ	0xFDD
  1376                           fsr2h	equ	0xFDA
  1377                           fsr2l	equ	0xFD9
  1378                           status	equ	0xFD8
  1379                           
  1380 ;; *************** function _delayMs *****************
  1381 ;; Defined at:
  1382 ;;		line 4 in file "delay.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  time            2   21[BANK0 ] unsigned int 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  i               2   24[BANK0 ] unsigned int 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1396 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;Total ram usage:        5 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    8
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_app
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text7
  1411  001618                     __ptext7:
  1412                           	opt stack 0
  1413  001618                     _delayMs:
  1414                           	opt stack 21
  1415                           
  1416                           ;delay.c: 6: for(uint16_t i =1 ; i < time; i++)
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;incstack = 0
  1420  001618  0E00               	movlw	0
  1421  00161A  0100               	movlb	0	; () banked
  1422  00161C  6F79               	movwf	(delayMs@i+1)& (0+255),b
  1423  00161E  0E01               	movlw	1
  1424  001620  6F78               	movwf	delayMs@i& (0+255),b
  1425  001622  D00C               	goto	l190
  1426  001624                     
  1427                           ; BSR set to: 0
  1428                           ;delay.c: 7: {
  1429                           ;delay.c: 8: _delay((unsigned long)((1)*(10000000/4000.0)));
  1430                           
  1431                           ; BSR set to: 0
  1432  001624  0E04               	movlw	4
  1433  001626  0100               	movlb	0	; () banked
  1434  001628  6F77               	movwf	??_delayMs& (0+255),b
  1435  00162A  0E3D               	movlw	61
  1436  00162C                     u1277:
  1437  00162C  2EE8               	decfsz	wreg,f,c
  1438  00162E  D7FE               	bra	u1277
  1439  001630  2F77               	decfsz	??_delayMs& (0+255),f,b
  1440  001632  D7FC               	bra	u1277
  1441  001634  D000               	nop2	
  1442  001636  0100               	movlb	0	; () banked
  1443  001638  4B78               	infsnz	delayMs@i& (0+255),f,b
  1444  00163A  2B79               	incf	(delayMs@i+1)& (0+255),f,b
  1445  00163C                     l190:
  1446                           
  1447                           ; BSR set to: 0
  1448  00163C  5175               	movf	delayMs@time& (0+255),w,b
  1449  00163E  5D78               	subwf	delayMs@i& (0+255),w,b
  1450  001640  5176               	movf	(delayMs@time+1)& (0+255),w,b
  1451  001642  5979               	subwfb	(delayMs@i+1)& (0+255),w,b
  1452  001644  B0D8               	btfsc	status,0,c
  1453  001646  0012               	return	
  1454  001648  D7ED               	goto	l191
  1455  00164A                     __end_of_delayMs:
  1456                           	opt stack 0
  1457                           tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           prodh	equ	0xFF4
  1462                           prodl	equ	0xFF3
  1463                           intcon	equ	0xFF2
  1464                           postinc0	equ	0xFEE
  1465                           wreg	equ	0xFE8
  1466                           indf2	equ	0xFDF
  1467                           postinc2	equ	0xFDE
  1468                           postdec2	equ	0xFDD
  1469                           fsr2h	equ	0xFDA
  1470                           fsr2l	equ	0xFD9
  1471                           status	equ	0xFD8
  1472                           
  1473 ;; *************** function _SYSTEM_Initialize *****************
  1474 ;; Defined at:
  1475 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;Total ram usage:        0 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:   10
  1496 ;; This function calls:
  1497 ;;		_ADC_Initialize
  1498 ;;		_EUSART1_Initialize
  1499 ;;		_INTERRUPT_Initialize
  1500 ;;		_OSCILLATOR_Initialize
  1501 ;;		_PIN_MANAGER_Initialize
  1502 ;;		_TMR0_Initialize
  1503 ;; This function is called by:
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text8
  1509  0016FC                     __ptext8:
  1510                           	opt stack 0
  1511  0016FC                     _SYSTEM_Initialize:
  1512                           	opt stack 20
  1513                           
  1514                           ;mcc.c: 114: INTERRUPT_Initialize();
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;incstack = 0
  1518  0016FC  ECBB  F00B         	call	_INTERRUPT_Initialize	;wreg free
  1519                           
  1520                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1521  001700  EC3B  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  1522                           
  1523                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1524  001704  ECAF  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  1525                           
  1526                           ;mcc.c: 117: TMR0_Initialize();
  1527  001708  ECB8  F00A         	call	_TMR0_Initialize	;wreg free
  1528                           
  1529                           ;mcc.c: 118: ADC_Initialize();
  1530  00170C  EC96  F00B         	call	_ADC_Initialize	;wreg free
  1531                           
  1532                           ;mcc.c: 119: EUSART1_Initialize();
  1533  001710  ECF2  F00A         	call	_EUSART1_Initialize	;wreg free
  1534  001714  0012               	return		;funcret
  1535  001716                     __end_of_SYSTEM_Initialize:
  1536                           	opt stack 0
  1537                           tblptru	equ	0xFF8
  1538                           tblptrh	equ	0xFF7
  1539                           tblptrl	equ	0xFF6
  1540                           tablat	equ	0xFF5
  1541                           prodh	equ	0xFF4
  1542                           prodl	equ	0xFF3
  1543                           intcon	equ	0xFF2
  1544                           postinc0	equ	0xFEE
  1545                           wreg	equ	0xFE8
  1546                           indf2	equ	0xFDF
  1547                           postinc2	equ	0xFDE
  1548                           postdec2	equ	0xFDD
  1549                           fsr2h	equ	0xFDA
  1550                           fsr2l	equ	0xFD9
  1551                           status	equ	0xFD8
  1552                           
  1553 ;; *************** function _TMR0_Initialize *****************
  1554 ;; Defined at:
  1555 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;Total ram usage:        2 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    9
  1576 ;; This function calls:
  1577 ;;		_TMR0_SetInterruptHandler
  1578 ;;		_TMR0_StartTimer
  1579 ;; This function is called by:
  1580 ;;		_SYSTEM_Initialize
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text9
  1585  001570                     __ptext9:
  1586                           	opt stack 0
  1587  001570                     _TMR0_Initialize:
  1588                           	opt stack 20
  1589                           
  1590                           ;tmr0.c: 71: T0CON = 0x15;
  1591                           
  1592                           ;incstack = 0
  1593  001570  0E15               	movlw	21
  1594  001572  6ED5               	movwf	4053,c	;volatile
  1595                           
  1596                           ;tmr0.c: 74: TMR0H = 0x67;
  1597  001574  0E67               	movlw	103
  1598  001576  6ED7               	movwf	4055,c	;volatile
  1599                           
  1600                           ;tmr0.c: 77: TMR0L = 0x69;
  1601  001578  0E69               	movlw	105
  1602  00157A  6ED6               	movwf	4054,c	;volatile
  1603                           
  1604                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1605  00157C  50D6               	movf	4054,w,c	;volatile
  1606  00157E  CFD7 F077          	movff	4055,??_TMR0_Initialize	;volatile
  1607  001582  0100               	movlb	0	; () banked
  1608  001584  6B78               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  1609  001586  C077  F078         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1610  00158A  6B77               	clrf	??_TMR0_Initialize& (0+255),b
  1611  00158C  1177               	iorwf	??_TMR0_Initialize& (0+255),w,b
  1612  00158E  6E45               	movwf	_timer0ReloadVal,c	;volatile
  1613  001590  5178               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  1614  001592  6E46               	movwf	_timer0ReloadVal+1,c	;volatile
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1618  001594  94F2               	bcf	intcon,2,c	;volatile
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1622  001596  8AF2               	bsf	intcon,5,c	;volatile
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1626  001598  0E8E               	movlw	low _TMR0_DefaultInterruptHandler
  1627  00159A  6F75               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  1628  00159C  0E17               	movlw	high _TMR0_DefaultInterruptHandler
  1629  00159E  6F76               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1630  0015A0  ECB6  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  1631                           
  1632                           ;tmr0.c: 92: TMR0_StartTimer();
  1633  0015A4  ECC5  F00B         	call	_TMR0_StartTimer	;wreg free
  1634  0015A8  0012               	return		;funcret
  1635  0015AA                     __end_of_TMR0_Initialize:
  1636                           	opt stack 0
  1637                           tblptru	equ	0xFF8
  1638                           tblptrh	equ	0xFF7
  1639                           tblptrl	equ	0xFF6
  1640                           tablat	equ	0xFF5
  1641                           prodh	equ	0xFF4
  1642                           prodl	equ	0xFF3
  1643                           intcon	equ	0xFF2
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           indf2	equ	0xFDF
  1647                           postinc2	equ	0xFDE
  1648                           postdec2	equ	0xFDD
  1649                           fsr2h	equ	0xFDA
  1650                           fsr2l	equ	0xFD9
  1651                           status	equ	0xFD8
  1652                           
  1653 ;; *************** function _TMR0_StartTimer *****************
  1654 ;; Defined at:
  1655 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		None
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    8
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_TMR0_Initialize
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text10
  1684  00178A                     __ptext10:
  1685                           	opt stack 0
  1686  00178A                     _TMR0_StartTimer:
  1687                           	opt stack 20
  1688                           
  1689                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  1690                           
  1691                           ;incstack = 0
  1692  00178A  8ED5               	bsf	4053,7,c	;volatile
  1693  00178C  0012               	return		;funcret
  1694  00178E                     __end_of_TMR0_StartTimer:
  1695                           	opt stack 0
  1696                           tblptru	equ	0xFF8
  1697                           tblptrh	equ	0xFF7
  1698                           tblptrl	equ	0xFF6
  1699                           tablat	equ	0xFF5
  1700                           prodh	equ	0xFF4
  1701                           prodl	equ	0xFF3
  1702                           intcon	equ	0xFF2
  1703                           postinc0	equ	0xFEE
  1704                           wreg	equ	0xFE8
  1705                           indf2	equ	0xFDF
  1706                           postinc2	equ	0xFDE
  1707                           postdec2	equ	0xFDD
  1708                           fsr2h	equ	0xFDA
  1709                           fsr2l	equ	0xFD9
  1710                           status	equ	0xFD8
  1711                           
  1712 ;; *************** function _TMR0_SetInterruptHandler *****************
  1713 ;; Defined at:
  1714 ;;		line 171 in file "mcc_generated_files/tmr0.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  InterruptHan    2   21[BANK0 ] PTR FTN()void 
  1717 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1729 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;Total ram usage:        2 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    8
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_TMR0_Initialize
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text11
  1744  00176C                     __ptext11:
  1745                           	opt stack 0
  1746  00176C                     _TMR0_SetInterruptHandler:
  1747                           	opt stack 20
  1748                           
  1749                           ;tmr0.c: 172: TMR0_InterruptHandler = InterruptHandler;
  1750                           
  1751                           ;incstack = 0
  1752  00176C  C075  F047         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1753  001770  C076  F048         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1754  001774  0012               	return		;funcret
  1755  001776                     __end_of_TMR0_SetInterruptHandler:
  1756                           	opt stack 0
  1757                           tblptru	equ	0xFF8
  1758                           tblptrh	equ	0xFF7
  1759                           tblptrl	equ	0xFF6
  1760                           tablat	equ	0xFF5
  1761                           prodh	equ	0xFF4
  1762                           prodl	equ	0xFF3
  1763                           intcon	equ	0xFF2
  1764                           postinc0	equ	0xFEE
  1765                           wreg	equ	0xFE8
  1766                           indf2	equ	0xFDF
  1767                           postinc2	equ	0xFDE
  1768                           postdec2	equ	0xFDD
  1769                           fsr2h	equ	0xFDA
  1770                           fsr2l	equ	0xFD9
  1771                           status	equ	0xFD8
  1772                           
  1773 ;; *************** function _PIN_MANAGER_Initialize *****************
  1774 ;; Defined at:
  1775 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    8
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_SYSTEM_Initialize
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text12
  1804  001476                     __ptext12:
  1805                           	opt stack 0
  1806  001476                     _PIN_MANAGER_Initialize:
  1807                           	opt stack 21
  1808                           
  1809                           ;pin_manager.c: 57: LATE = 0x00;
  1810                           
  1811                           ;incstack = 0
  1812  001476  0E00               	movlw	0
  1813  001478  6E8D               	movwf	3981,c	;volatile
  1814                           
  1815                           ;pin_manager.c: 58: LATD = 0x00;
  1816  00147A  0E00               	movlw	0
  1817  00147C  6E8C               	movwf	3980,c	;volatile
  1818                           
  1819                           ;pin_manager.c: 59: LATA = 0x00;
  1820  00147E  0E00               	movlw	0
  1821  001480  6E89               	movwf	3977,c	;volatile
  1822                           
  1823                           ;pin_manager.c: 60: LATB = 0x00;
  1824  001482  0E00               	movlw	0
  1825  001484  6E8A               	movwf	3978,c	;volatile
  1826                           
  1827                           ;pin_manager.c: 61: LATC = 0x00;
  1828  001486  0E00               	movlw	0
  1829  001488  6E8B               	movwf	3979,c	;volatile
  1830                           
  1831                           ;pin_manager.c: 66: TRISE = 0x07;
  1832  00148A  0E07               	movlw	7
  1833  00148C  6E96               	movwf	3990,c	;volatile
  1834                           
  1835                           ;pin_manager.c: 67: TRISA = 0xFF;
  1836  00148E  6892               	setf	3986,c	;volatile
  1837                           
  1838                           ;pin_manager.c: 68: TRISB = 0xFF;
  1839  001490  6893               	setf	3987,c	;volatile
  1840                           
  1841                           ;pin_manager.c: 69: TRISC = 0xBF;
  1842  001492  0EBF               	movlw	191
  1843  001494  6E94               	movwf	3988,c	;volatile
  1844                           
  1845                           ;pin_manager.c: 70: TRISD = 0xFC;
  1846  001496  0EFC               	movlw	252
  1847  001498  6E95               	movwf	3989,c	;volatile
  1848                           
  1849                           ;pin_manager.c: 75: ANSELC = 0x3C;
  1850  00149A  0E3C               	movlw	60
  1851  00149C  010F               	movlb	15	; () banked
  1852  00149E  6F3A               	movwf	58,b	;volatile
  1853                           
  1854                           ;pin_manager.c: 76: ANSELB = 0x3E;
  1855  0014A0  0E3E               	movlw	62
  1856  0014A2  6F39               	movwf	57,b	;volatile
  1857                           
  1858                           ;pin_manager.c: 77: ANSELD = 0xFC;
  1859  0014A4  0EFC               	movlw	252
  1860  0014A6  6F3B               	movwf	59,b	;volatile
  1861                           
  1862                           ;pin_manager.c: 78: ANSELE = 0x07;
  1863  0014A8  0E07               	movlw	7
  1864  0014AA  6F3C               	movwf	60,b	;volatile
  1865                           
  1866                           ;pin_manager.c: 79: ANSELA = 0x2F;
  1867  0014AC  0E2F               	movlw	47
  1868  0014AE  6F38               	movwf	56,b	;volatile
  1869                           
  1870                           ;pin_manager.c: 84: WPUB = 0xFB;
  1871  0014B0  0EFB               	movlw	251
  1872  0014B2  6E61               	movwf	3937,c	;volatile
  1873                           
  1874                           ; BSR set to: 15
  1875                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
  1876  0014B4  9EF1               	bcf	intcon2,7,c	;volatile
  1877                           
  1878                           ; BSR set to: 15
  1879  0014B6  0012               	return		;funcret
  1880  0014B8                     __end_of_PIN_MANAGER_Initialize:
  1881                           	opt stack 0
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           prodh	equ	0xFF4
  1887                           prodl	equ	0xFF3
  1888                           intcon	equ	0xFF2
  1889                           intcon2	equ	0xFF1
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           indf2	equ	0xFDF
  1893                           postinc2	equ	0xFDE
  1894                           postdec2	equ	0xFDD
  1895                           fsr2h	equ	0xFDA
  1896                           fsr2l	equ	0xFD9
  1897                           status	equ	0xFD8
  1898                           
  1899 ;; *************** function _OSCILLATOR_Initialize *****************
  1900 ;; Defined at:
  1901 ;;		line 122 in file "mcc_generated_files/mcc.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;Total ram usage:        0 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    8
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_SYSTEM_Initialize
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text13
  1930  00175E                     __ptext13:
  1931                           	opt stack 0
  1932  00175E                     _OSCILLATOR_Initialize:
  1933                           	opt stack 21
  1934                           
  1935                           ;mcc.c: 125: OSCCON = 0x70;
  1936                           
  1937                           ; BSR set to: 15
  1938                           ;incstack = 0
  1939  00175E  0E70               	movlw	112
  1940  001760  6ED3               	movwf	4051,c	;volatile
  1941                           
  1942                           ;mcc.c: 127: OSCCON2 = 0x04;
  1943  001762  0E04               	movlw	4
  1944  001764  6ED2               	movwf	4050,c	;volatile
  1945                           
  1946                           ;mcc.c: 129: OSCTUNE = 0x00;
  1947  001766  0E00               	movlw	0
  1948  001768  6E9B               	movwf	3995,c	;volatile
  1949  00176A  0012               	return		;funcret
  1950  00176C                     __end_of_OSCILLATOR_Initialize:
  1951                           	opt stack 0
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           prodh	equ	0xFF4
  1957                           prodl	equ	0xFF3
  1958                           intcon	equ	0xFF2
  1959                           intcon2	equ	0xFF1
  1960                           postinc0	equ	0xFEE
  1961                           wreg	equ	0xFE8
  1962                           indf2	equ	0xFDF
  1963                           postinc2	equ	0xFDE
  1964                           postdec2	equ	0xFDD
  1965                           fsr2h	equ	0xFDA
  1966                           fsr2l	equ	0xFD9
  1967                           status	equ	0xFD8
  1968                           
  1969 ;; *************** function _INTERRUPT_Initialize *****************
  1970 ;; Defined at:
  1971 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		None
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    8
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_SYSTEM_Initialize
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text14
  2000  001776                     __ptext14:
  2001                           	opt stack 0
  2002  001776                     _INTERRUPT_Initialize:
  2003                           	opt stack 21
  2004                           
  2005                           ;interrupt_manager.c: 54: RCONbits.IPEN = 1;
  2006                           
  2007                           ;incstack = 0
  2008  001776  8ED0               	bsf	4048,7,c	;volatile
  2009                           
  2010                           ;interrupt_manager.c: 59: INTCON2bits.TMR0IP = 1;
  2011  001778  84F1               	bsf	intcon2,2,c	;volatile
  2012                           
  2013                           ;interrupt_manager.c: 62: IPR1bits.RC1IP = 1;
  2014  00177A  8A9F               	bsf	3999,5,c	;volatile
  2015                           
  2016                           ;interrupt_manager.c: 66: IPR1bits.TX1IP = 0;
  2017  00177C  989F               	bcf	3999,4,c	;volatile
  2018  00177E  0012               	return		;funcret
  2019  001780                     __end_of_INTERRUPT_Initialize:
  2020                           	opt stack 0
  2021                           tblptru	equ	0xFF8
  2022                           tblptrh	equ	0xFF7
  2023                           tblptrl	equ	0xFF6
  2024                           tablat	equ	0xFF5
  2025                           prodh	equ	0xFF4
  2026                           prodl	equ	0xFF3
  2027                           intcon	equ	0xFF2
  2028                           intcon2	equ	0xFF1
  2029                           postinc0	equ	0xFEE
  2030                           wreg	equ	0xFE8
  2031                           indf2	equ	0xFDF
  2032                           postinc2	equ	0xFDE
  2033                           postdec2	equ	0xFDD
  2034                           fsr2h	equ	0xFDA
  2035                           fsr2l	equ	0xFD9
  2036                           status	equ	0xFD8
  2037                           
  2038 ;; *************** function _EUSART1_Initialize *****************
  2039 ;; Defined at:
  2040 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        0 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    8
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_SYSTEM_Initialize
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text15
  2069  0015E4                     __ptext15:
  2070                           	opt stack 0
  2071  0015E4                     _EUSART1_Initialize:
  2072                           	opt stack 21
  2073                           
  2074                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  2075                           
  2076                           ;incstack = 0
  2077  0015E4  9A9D               	bcf	3997,5,c	;volatile
  2078                           
  2079                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  2080  0015E6  989D               	bcf	3997,4,c	;volatile
  2081                           
  2082                           ;eusart1.c: 84: BAUDCON1 = 0x08;
  2083  0015E8  0E08               	movlw	8
  2084  0015EA  6EB8               	movwf	4024,c	;volatile
  2085                           
  2086                           ;eusart1.c: 87: RCSTA1 = 0x90;
  2087  0015EC  0E90               	movlw	144
  2088  0015EE  6EAB               	movwf	4011,c	;volatile
  2089                           
  2090                           ;eusart1.c: 90: TXSTA1 = 0x24;
  2091  0015F0  0E24               	movlw	36
  2092  0015F2  6EAC               	movwf	4012,c	;volatile
  2093                           
  2094                           ;eusart1.c: 93: SPBRG1 = 0x03;
  2095  0015F4  0E03               	movlw	3
  2096  0015F6  6EAF               	movwf	4015,c	;volatile
  2097                           
  2098                           ;eusart1.c: 96: SPBRGH1 = 0x01;
  2099  0015F8  0E01               	movlw	1
  2100  0015FA  6EB0               	movwf	4016,c	;volatile
  2101                           
  2102                           ;eusart1.c: 100: eusart1TxHead = 0;
  2103  0015FC  0E00               	movlw	0
  2104  0015FE  6E44               	movwf	_eusart1TxHead,c	;volatile
  2105                           
  2106                           ;eusart1.c: 101: eusart1TxTail = 0;
  2107  001600  0E00               	movlw	0
  2108  001602  6E43               	movwf	_eusart1TxTail,c	;volatile
  2109                           
  2110                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  2111  001604  0E08               	movlw	8
  2112  001606  6E49               	movwf	_eusart1TxBufferRemaining,c	;volatile
  2113                           
  2114                           ;eusart1.c: 104: eusart1RxHead = 0;
  2115  001608  0E00               	movlw	0
  2116  00160A  6E42               	movwf	_eusart1RxHead,c	;volatile
  2117                           
  2118                           ;eusart1.c: 105: eusart1RxTail = 0;
  2119  00160C  0E00               	movlw	0
  2120  00160E  6E41               	movwf	_eusart1RxTail,c	;volatile
  2121                           
  2122                           ;eusart1.c: 106: eusart1RxCount = 0;
  2123  001610  0E00               	movlw	0
  2124  001612  6E40               	movwf	_eusart1RxCount,c	;volatile
  2125                           
  2126                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  2127  001614  8A9D               	bsf	3997,5,c	;volatile
  2128  001616  0012               	return		;funcret
  2129  001618                     __end_of_EUSART1_Initialize:
  2130                           	opt stack 0
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           prodh	equ	0xFF4
  2136                           prodl	equ	0xFF3
  2137                           intcon	equ	0xFF2
  2138                           intcon2	equ	0xFF1
  2139                           postinc0	equ	0xFEE
  2140                           wreg	equ	0xFE8
  2141                           indf2	equ	0xFDF
  2142                           postinc2	equ	0xFDE
  2143                           postdec2	equ	0xFDD
  2144                           fsr2h	equ	0xFDA
  2145                           fsr2l	equ	0xFD9
  2146                           status	equ	0xFD8
  2147                           
  2148 ;; *************** function _ADC_Initialize *****************
  2149 ;; Defined at:
  2150 ;;		line 58 in file "mcc_generated_files/adc.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    8
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_SYSTEM_Initialize
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text16
  2179  00172C                     __ptext16:
  2180                           	opt stack 0
  2181  00172C                     _ADC_Initialize:
  2182                           	opt stack 21
  2183                           
  2184                           ;adc.c: 63: ADCON0 = 0x01;
  2185                           
  2186                           ;incstack = 0
  2187  00172C  0E01               	movlw	1
  2188  00172E  6EC2               	movwf	4034,c	;volatile
  2189                           
  2190                           ;adc.c: 66: ADCON1 = 0x00;
  2191  001730  0E00               	movlw	0
  2192  001732  6EC1               	movwf	4033,c	;volatile
  2193                           
  2194                           ;adc.c: 69: ADCON2 = 0xAE;
  2195  001734  0EAE               	movlw	174
  2196  001736  6EC0               	movwf	4032,c	;volatile
  2197                           
  2198                           ;adc.c: 72: ADRESL = 0x00;
  2199  001738  0E00               	movlw	0
  2200  00173A  6EC3               	movwf	4035,c	;volatile
  2201                           
  2202                           ;adc.c: 75: ADRESH = 0x00;
  2203  00173C  0E00               	movlw	0
  2204  00173E  6EC4               	movwf	4036,c	;volatile
  2205  001740  0012               	return		;funcret
  2206  001742                     __end_of_ADC_Initialize:
  2207                           	opt stack 0
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           prodh	equ	0xFF4
  2213                           prodl	equ	0xFF3
  2214                           intcon	equ	0xFF2
  2215                           intcon2	equ	0xFF1
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           indf2	equ	0xFDF
  2219                           postinc2	equ	0xFDE
  2220                           postdec2	equ	0xFDD
  2221                           fsr2h	equ	0xFDA
  2222                           fsr2l	equ	0xFD9
  2223                           status	equ	0xFD8
  2224                           
  2225 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  2226 ;; Defined at:
  2227 ;;		line 87 in file "mcc_generated_files/interrupt_manager.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;Total ram usage:       21 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    7
  2248 ;; This function calls:
  2249 ;;		_EUSART1_Transmit_ISR
  2250 ;; This function is called by:
  2251 ;;		Interrupt level 1
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	intcodelo
  2256  000018                     __pintcodelo:
  2257                           	opt stack 0
  2258  000018                     _INTERRUPT_InterruptManagerLow:
  2259                           	opt stack 19
  2260                           
  2261                           ;incstack = 0
  2262  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2263  00001A  CFD8 F060          	movff	status,??_INTERRUPT_InterruptManagerLow
  2264  00001E  CFE8 F061          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  2265  000022  CFE0 F062          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  2266  000026  CFFA F063          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  2267  00002A  CFFB F064          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  2268  00002E  CFE9 F065          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
  2269  000032  CFEA F066          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
  2270  000036  CFE1 F067          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
  2271  00003A  CFE2 F068          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
  2272  00003E  CFD9 F069          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
  2273  000042  CFDA F06A          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
  2274  000046  CFF3 F06B          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
  2275  00004A  CFF4 F06C          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
  2276  00004E  CFF6 F06D          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
  2277  000052  CFF7 F06E          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
  2278  000056  CFF8 F06F          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
  2279  00005A  CFF5 F070          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
  2280  00005E  C04A  F071         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
  2281  000062  C04B  F072         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
  2282  000066  C04C  F073         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
  2283  00006A  C04D  F074         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
  2284                           
  2285                           ;interrupt_manager.c: 90: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  2286  00006E  B89D               	btfsc	3997,4,c	;volatile
  2287  000070  A89E               	btfss	3998,4,c	;volatile
  2288  000072  D002               	goto	i1l99
  2289                           
  2290                           ;interrupt_manager.c: 91: {
  2291                           ;interrupt_manager.c: 92: EUSART1_Transmit_ISR();
  2292  000074  EC3D  F00B         	call	_EUSART1_Transmit_ISR	;wreg free
  2293  000078                     i1l99:
  2294                           
  2295                           ;interrupt_manager.c: 94: else
  2296                           ;interrupt_manager.c: 95: {
  2297  000078  C074  F04D         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
  2298  00007C  C073  F04C         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
  2299  000080  C072  F04B         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
  2300  000084  C071  F04A         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
  2301  000088  C070  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
  2302  00008C  C06F  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
  2303  000090  C06E  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
  2304  000094  C06D  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
  2305  000098  C06C  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
  2306  00009C  C06B  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
  2307  0000A0  C06A  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
  2308  0000A4  C069  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
  2309  0000A8  C068  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
  2310  0000AC  C067  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
  2311  0000B0  C066  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
  2312  0000B4  C065  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
  2313  0000B8  C064  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  2314  0000BC  C063  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  2315  0000C0  C062  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  2316  0000C4  C061  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  2317  0000C8  C060  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  2318  0000CC  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2319  0000CE  0010               	retfie	
  2320  0000D0                     __end_of_INTERRUPT_InterruptManagerLow:
  2321                           	opt stack 0
  2322                           pclatu	equ	0xFFB
  2323                           pclath	equ	0xFFA
  2324                           tblptru	equ	0xFF8
  2325                           tblptrh	equ	0xFF7
  2326                           tblptrl	equ	0xFF6
  2327                           tablat	equ	0xFF5
  2328                           prodh	equ	0xFF4
  2329                           prodl	equ	0xFF3
  2330                           intcon	equ	0xFF2
  2331                           intcon2	equ	0xFF1
  2332                           postinc0	equ	0xFEE
  2333                           fsr0h	equ	0xFEA
  2334                           fsr0l	equ	0xFE9
  2335                           wreg	equ	0xFE8
  2336                           fsr1h	equ	0xFE2
  2337                           fsr1l	equ	0xFE1
  2338                           bsr	equ	0xFE0
  2339                           indf2	equ	0xFDF
  2340                           postinc2	equ	0xFDE
  2341                           postdec2	equ	0xFDD
  2342                           fsr2h	equ	0xFDA
  2343                           fsr2l	equ	0xFD9
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function _EUSART1_Transmit_ISR *****************
  2347 ;; Defined at:
  2348 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    6
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_INTERRUPT_InterruptManagerLow
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text18
  2377  00167A                     __ptext18:
  2378                           	opt stack 0
  2379  00167A                     _EUSART1_Transmit_ISR:
  2380                           	opt stack 19
  2381                           
  2382                           ;eusart1.c: 169: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  2383                           
  2384                           ;incstack = 0
  2385  00167A  0E08               	movlw	8
  2386  00167C  6049               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  2387  00167E  D012               	goto	i1l163
  2388                           
  2389                           ;eusart1.c: 170: {
  2390                           ;eusart1.c: 171: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  2391  001680  5043               	movf	_eusart1TxTail,w,c	;volatile
  2392  001682  0D01               	mullw	1
  2393  001684  0E36               	movlw	low _eusart1TxBuffer
  2394  001686  24F3               	addwf	prodl,w,c
  2395  001688  6ED9               	movwf	fsr2l,c
  2396  00168A  0E00               	movlw	high _eusart1TxBuffer
  2397  00168C  20F4               	addwfc	prodh,w,c
  2398  00168E  6EDA               	movwf	fsr2h,c
  2399  001690  50DF               	movf	indf2,w,c
  2400  001692  6EAD               	movwf	4013,c	;volatile
  2401  001694  2A43               	incf	_eusart1TxTail,f,c	;volatile
  2402                           
  2403                           ;eusart1.c: 172: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  2404  001696  0E07               	movlw	7
  2405  001698  6443               	cpfsgt	_eusart1TxTail,c	;volatile
  2406  00169A  D002               	goto	i1l164
  2407                           
  2408                           ;eusart1.c: 173: {
  2409                           ;eusart1.c: 174: eusart1TxTail = 0;
  2410  00169C  0E00               	movlw	0
  2411  00169E  6E43               	movwf	_eusart1TxTail,c	;volatile
  2412  0016A0                     i1l164:
  2413                           
  2414                           ;eusart1.c: 175: }
  2415                           ;eusart1.c: 176: eusart1TxBufferRemaining++;
  2416  0016A0  2A49               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  2417                           
  2418                           ;eusart1.c: 177: }
  2419  0016A2  0012               	return	
  2420  0016A4                     i1l163:
  2421                           
  2422                           ;eusart1.c: 178: else
  2423                           ;eusart1.c: 179: {
  2424                           ;eusart1.c: 180: PIE1bits.TX1IE = 0;
  2425  0016A4  989D               	bcf	3997,4,c	;volatile
  2426  0016A6  0012               	return	
  2427  0016A8                     __end_of_EUSART1_Transmit_ISR:
  2428                           	opt stack 0
  2429                           pclatu	equ	0xFFB
  2430                           pclath	equ	0xFFA
  2431                           tblptru	equ	0xFF8
  2432                           tblptrh	equ	0xFF7
  2433                           tblptrl	equ	0xFF6
  2434                           tablat	equ	0xFF5
  2435                           prodh	equ	0xFF4
  2436                           prodl	equ	0xFF3
  2437                           intcon	equ	0xFF2
  2438                           intcon2	equ	0xFF1
  2439                           postinc0	equ	0xFEE
  2440                           fsr0h	equ	0xFEA
  2441                           fsr0l	equ	0xFE9
  2442                           wreg	equ	0xFE8
  2443                           fsr1h	equ	0xFE2
  2444                           fsr1l	equ	0xFE1
  2445                           bsr	equ	0xFE0
  2446                           indf2	equ	0xFDF
  2447                           postinc2	equ	0xFDE
  2448                           postdec2	equ	0xFDD
  2449                           fsr2h	equ	0xFDA
  2450                           fsr2l	equ	0xFD9
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  2454 ;; Defined at:
  2455 ;;		line 70 in file "mcc_generated_files/interrupt_manager.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;Total ram usage:       18 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    5
  2476 ;; This function calls:
  2477 ;;		_EUSART1_Receive_ISR
  2478 ;;		_TMR0_ISR
  2479 ;; This function is called by:
  2480 ;;		Interrupt level 2
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	intcode
  2485  000008                     __pintcode:
  2486                           	opt stack 0
  2487  000008                     _INTERRUPT_InterruptManagerHigh:
  2488                           	opt stack 19
  2489                           
  2490                           ;incstack = 0
  2491  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2492  00000A  EF44  F009         	goto	int_func
  2493                           pclatu	equ	0xFFB
  2494                           pclath	equ	0xFFA
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           prodh	equ	0xFF4
  2500                           prodl	equ	0xFF3
  2501                           intcon	equ	0xFF2
  2502                           intcon2	equ	0xFF1
  2503                           postinc0	equ	0xFEE
  2504                           fsr0h	equ	0xFEA
  2505                           fsr0l	equ	0xFE9
  2506                           wreg	equ	0xFE8
  2507                           fsr1h	equ	0xFE2
  2508                           fsr1l	equ	0xFE1
  2509                           bsr	equ	0xFE0
  2510                           indf2	equ	0xFDF
  2511                           postinc2	equ	0xFDE
  2512                           postdec2	equ	0xFDD
  2513                           fsr2h	equ	0xFDA
  2514                           fsr2l	equ	0xFD9
  2515                           status	equ	0xFD8
  2516                           
  2517                           	psect	intcode_body
  2518  001288                     __pintcode_body:
  2519                           	opt stack 19
  2520  001288                     int_func:
  2521                           	opt stack 19
  2522  001288  CFFA F01C          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  2523  00128C  CFFB F01D          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  2524  001290  CFE9 F01E          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
  2525  001294  CFEA F01F          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
  2526  001298  CFE1 F020          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
  2527  00129C  CFE2 F021          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
  2528  0012A0  CFD9 F022          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
  2529  0012A4  CFDA F023          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
  2530  0012A8  CFF3 F024          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
  2531  0012AC  CFF4 F025          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
  2532  0012B0  CFF6 F026          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
  2533  0012B4  CFF7 F027          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
  2534  0012B8  CFF8 F028          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
  2535  0012BC  CFF5 F029          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
  2536  0012C0  C04A  F02A         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
  2537  0012C4  C04B  F02B         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
  2538  0012C8  C04C  F02C         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
  2539  0012CC  C04D  F02D         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
  2540                           
  2541                           ;interrupt_manager.c: 73: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2542  0012D0  BAF2               	btfsc	intcon,5,c	;volatile
  2543  0012D2  A4F2               	btfss	intcon,2,c	;volatile
  2544  0012D4  D003               	goto	i2l90
  2545                           
  2546                           ;interrupt_manager.c: 74: {
  2547                           ;interrupt_manager.c: 75: TMR0_ISR();
  2548  0012D6  EC6A  F00B         	call	_TMR0_ISR	;wreg free
  2549                           
  2550                           ;interrupt_manager.c: 76: }
  2551  0012DA  D005               	goto	i2l92
  2552  0012DC                     i2l90:
  2553                           
  2554                           ;interrupt_manager.c: 77: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  2555  0012DC  BA9D               	btfsc	3997,5,c	;volatile
  2556  0012DE  AA9E               	btfss	3998,5,c	;volatile
  2557  0012E0  D002               	goto	i2l92
  2558                           
  2559                           ;interrupt_manager.c: 78: {
  2560                           ;interrupt_manager.c: 79: EUSART1_Receive_ISR();
  2561  0012E2  EC54  F00B         	call	_EUSART1_Receive_ISR	;wreg free
  2562  0012E6                     i2l92:
  2563                           
  2564                           ;interrupt_manager.c: 81: else
  2565                           ;interrupt_manager.c: 82: {
  2566  0012E6  C02D  F04D         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
  2567  0012EA  C02C  F04C         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
  2568  0012EE  C02B  F04B         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
  2569  0012F2  C02A  F04A         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
  2570  0012F6  C029  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
  2571  0012FA  C028  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
  2572  0012FE  C027  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
  2573  001302  C026  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
  2574  001306  C025  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
  2575  00130A  C024  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
  2576  00130E  C023  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
  2577  001312  C022  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
  2578  001316  C021  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
  2579  00131A  C020  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
  2580  00131E  C01F  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
  2581  001322  C01E  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
  2582  001326  C01D  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  2583  00132A  C01C  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  2584  00132E  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2585  001330  0011               	retfie		f
  2586  001332                     __end_of_INTERRUPT_InterruptManagerHigh:
  2587                           	opt stack 0
  2588                           pclatu	equ	0xFFB
  2589                           pclath	equ	0xFFA
  2590                           tblptru	equ	0xFF8
  2591                           tblptrh	equ	0xFF7
  2592                           tblptrl	equ	0xFF6
  2593                           tablat	equ	0xFF5
  2594                           prodh	equ	0xFF4
  2595                           prodl	equ	0xFF3
  2596                           intcon	equ	0xFF2
  2597                           intcon2	equ	0xFF1
  2598                           postinc0	equ	0xFEE
  2599                           fsr0h	equ	0xFEA
  2600                           fsr0l	equ	0xFE9
  2601                           wreg	equ	0xFE8
  2602                           fsr1h	equ	0xFE2
  2603                           fsr1l	equ	0xFE1
  2604                           bsr	equ	0xFE0
  2605                           indf2	equ	0xFDF
  2606                           postinc2	equ	0xFDE
  2607                           postdec2	equ	0xFDD
  2608                           fsr2h	equ	0xFDA
  2609                           fsr2l	equ	0xFD9
  2610                           status	equ	0xFD8
  2611                           
  2612 ;; *************** function _TMR0_ISR *****************
  2613 ;; Defined at:
  2614 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;Total ram usage:        0 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    4
  2635 ;; This function calls:
  2636 ;;		_TMR0_CallBack
  2637 ;; This function is called by:
  2638 ;;		_INTERRUPT_InterruptManagerHigh
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text20
  2643  0016D4                     __ptext20:
  2644                           	opt stack 0
  2645  0016D4                     _TMR0_ISR:
  2646                           	opt stack 19
  2647                           
  2648                           ;tmr0.c: 136: static volatile uint16_t CountCallBack = 0;
  2649                           ;tmr0.c: 139: INTCONbits.TMR0IF = 0;
  2650                           
  2651                           ;incstack = 0
  2652  0016D4  94F2               	bcf	intcon,2,c	;volatile
  2653                           
  2654                           ;tmr0.c: 143: TMR0H = timer0ReloadVal >> 8;
  2655  0016D6  5046               	movf	_timer0ReloadVal+1,w,c	;volatile
  2656  0016D8  6ED7               	movwf	4055,c	;volatile
  2657                           
  2658                           ;tmr0.c: 144: TMR0L = (uint8_t) timer0ReloadVal;
  2659  0016DA  C045  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  2660                           
  2661                           ;tmr0.c: 147: if (++CountCallBack >= 3)
  2662  0016DE  4A3E               	infsnz	TMR0_ISR@CountCallBack,f,c	;volatile
  2663  0016E0  2A3F               	incf	TMR0_ISR@CountCallBack+1,f,c	;volatile
  2664  0016E2  503F               	movf	TMR0_ISR@CountCallBack+1,w,c	;volatile
  2665  0016E4  E104               	bnz	i2u94_40
  2666  0016E6  0E03               	movlw	3
  2667  0016E8  5C3E               	subwf	TMR0_ISR@CountCallBack,w,c	;volatile
  2668  0016EA  A0D8               	btfss	status,0,c
  2669  0016EC  0012               	return	
  2670  0016EE                     i2u94_40:
  2671                           
  2672                           ;tmr0.c: 148: {
  2673                           ;tmr0.c: 150: TMR0_CallBack();
  2674  0016EE  EC99  F009         	call	_TMR0_CallBack	;wreg free
  2675                           
  2676                           ;tmr0.c: 153: CountCallBack = 0;
  2677  0016F2  0E00               	movlw	0
  2678  0016F4  6E3F               	movwf	TMR0_ISR@CountCallBack+1,c	;volatile
  2679  0016F6  0E00               	movlw	0
  2680  0016F8  6E3E               	movwf	TMR0_ISR@CountCallBack,c	;volatile
  2681  0016FA  0012               	return	
  2682  0016FC                     __end_of_TMR0_ISR:
  2683                           	opt stack 0
  2684                           pclatu	equ	0xFFB
  2685                           pclath	equ	0xFFA
  2686                           tblptru	equ	0xFF8
  2687                           tblptrh	equ	0xFF7
  2688                           tblptrl	equ	0xFF6
  2689                           tablat	equ	0xFF5
  2690                           prodh	equ	0xFF4
  2691                           prodl	equ	0xFF3
  2692                           intcon	equ	0xFF2
  2693                           intcon2	equ	0xFF1
  2694                           postinc0	equ	0xFEE
  2695                           fsr0h	equ	0xFEA
  2696                           fsr0l	equ	0xFE9
  2697                           wreg	equ	0xFE8
  2698                           fsr1h	equ	0xFE2
  2699                           fsr1l	equ	0xFE1
  2700                           bsr	equ	0xFE0
  2701                           indf2	equ	0xFDF
  2702                           postinc2	equ	0xFDE
  2703                           postdec2	equ	0xFDD
  2704                           fsr2h	equ	0xFDA
  2705                           fsr2l	equ	0xFD9
  2706                           status	equ	0xFD8
  2707                           
  2708 ;; *************** function _TMR0_CallBack *****************
  2709 ;; Defined at:
  2710 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  adcresult       2   25[COMRAM] unsigned int 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;Total ram usage:        3 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    3
  2731 ;; This function calls:
  2732 ;;		Absolute function
  2733 ;;		_ADC_GetConversion
  2734 ;;		_TMR0_DefaultInterruptHandler
  2735 ;;		i2_printf
  2736 ;; This function is called by:
  2737 ;;		_TMR0_ISR
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text21
  2742  001332                     __ptext21:
  2743                           	opt stack 0
  2744  001332                     _TMR0_CallBack:
  2745                           	opt stack 19
  2746                           
  2747                           ;incstack = 0
  2748                           ;tmr0.c: 161: do { LATDbits.LATD1 = ~LATDbits.LATD1; } while(0);
  2749  001332  A28C               	btfss	3980,1,c	;volatile
  2750  001334  D002               	goto	i2u91_40
  2751  001336  0E01               	movlw	1
  2752  001338  D001               	goto	i2u91_46
  2753  00133A                     i2u91_40:
  2754  00133A  0E00               	movlw	0
  2755  00133C                     i2u91_46:
  2756  00133C  0AFF               	xorlw	255
  2757  00133E  6E19               	movwf	??_TMR0_CallBack& (0+255),c
  2758  001340  4619               	rlncf	??_TMR0_CallBack,f,c
  2759  001342  508C               	movf	3980,w,c	;volatile
  2760  001344  1819               	xorwf	??_TMR0_CallBack,w,c
  2761  001346  0BFD               	andlw	-3
  2762  001348  1819               	xorwf	??_TMR0_CallBack,w,c
  2763  00134A  6E8C               	movwf	3980,c	;volatile
  2764                           
  2765                           ;tmr0.c: 162: uint16_t adcresult = ADC_GetConversion(0);
  2766  00134C  0E00               	movlw	0
  2767  00134E  EC25  F00B         	call	_ADC_GetConversion
  2768  001352  C001  F01A         	movff	?_ADC_GetConversion,TMR0_CallBack@adcresult
  2769  001356  C002  F01B         	movff	?_ADC_GetConversion+1,TMR0_CallBack@adcresult+1
  2770                           
  2771                           ;tmr0.c: 163: printf("ADC: %d",adcresult);
  2772  00135A  0E14               	movlw	low STR_2
  2773  00135C  6E0D               	movwf	i2printf@f,c
  2774  00135E  0E10               	movlw	high STR_2
  2775  001360  6E0E               	movwf	i2printf@f+1,c
  2776  001362  C01A  F00F         	movff	TMR0_CallBack@adcresult,?i2_printf+2
  2777  001366  C01B  F010         	movff	TMR0_CallBack@adcresult+1,?i2_printf+3
  2778  00136A  ECAD  F008         	call	i2_printf	;wreg free
  2779                           
  2780                           ;tmr0.c: 165: if(TMR0_InterruptHandler)
  2781  00136E  5047               	movf	_TMR0_InterruptHandler,w,c
  2782  001370  1048               	iorwf	_TMR0_InterruptHandler+1,w,c
  2783  001372  B4D8               	btfsc	status,2,c
  2784  001374  0012               	return	
  2785                           
  2786                           ;tmr0.c: 166: {
  2787                           ;tmr0.c: 167: TMR0_InterruptHandler();
  2788  001376  D801               	call	i2u93_48
  2789  001378  0012               	return	
  2790  00137A                     i2u93_48:
  2791  00137A  0005               	push	
  2792  00137C  6EFA               	movwf	pclath,c
  2793  00137E  5047               	movf	_TMR0_InterruptHandler,w,c
  2794  001380  6EFD               	movwf	tosl,c
  2795  001382  5048               	movf	_TMR0_InterruptHandler+1,w,c
  2796  001384  6EFE               	movwf	tosh,c
  2797  001386  6AFF               	clrf	tosu,c
  2798  001388  50FA               	movf	pclath,w,c
  2799  00138A  0012               	return		;indir
  2800  00138C                     __end_of_TMR0_CallBack:
  2801                           	opt stack 0
  2802                           tosu	equ	0xFFF
  2803                           tosh	equ	0xFFE
  2804                           tosl	equ	0xFFD
  2805                           pclatu	equ	0xFFB
  2806                           pclath	equ	0xFFA
  2807                           tblptru	equ	0xFF8
  2808                           tblptrh	equ	0xFF7
  2809                           tblptrl	equ	0xFF6
  2810                           tablat	equ	0xFF5
  2811                           prodh	equ	0xFF4
  2812                           prodl	equ	0xFF3
  2813                           intcon	equ	0xFF2
  2814                           intcon2	equ	0xFF1
  2815                           postinc0	equ	0xFEE
  2816                           fsr0h	equ	0xFEA
  2817                           fsr0l	equ	0xFE9
  2818                           wreg	equ	0xFE8
  2819                           fsr1h	equ	0xFE2
  2820                           fsr1l	equ	0xFE1
  2821                           bsr	equ	0xFE0
  2822                           indf2	equ	0xFDF
  2823                           postinc2	equ	0xFDE
  2824                           postdec2	equ	0xFDD
  2825                           fsr2h	equ	0xFDA
  2826                           fsr2l	equ	0xFD9
  2827                           status	equ	0xFD8
  2828                           
  2829 ;; *************** function i2_printf *****************
  2830 ;; Defined at:
  2831 ;;		line 464 in file "/Applications/microchip/xc8/v1.44/sources/common/doprnt.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  f               2   12[COMRAM] PTR const unsigned char 
  2834 ;;		 -> STR_2(8), STR_1(9), 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  printf          4    0        struct .
  2837 ;;  printf          3    0        PTR const unsigned char 
  2838 ;;  printf          2   21[COMRAM] unsigned int 
  2839 ;;  printf          2   17[COMRAM] PTR void [1]
  2840 ;;		 -> ?i2_printf(2), ?_printf(2), 
  2841 ;;  printf          2    0        unsigned int 
  2842 ;;  printf          1   23[COMRAM] char 
  2843 ;;  printf          1   20[COMRAM] char 
  2844 ;;  printf          1   19[COMRAM] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  2   12[COMRAM] int 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;Total ram usage:       12 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    2
  2861 ;; This function calls:
  2862 ;;		i2___lwdiv
  2863 ;;		i2___lwmod
  2864 ;;		i2_putch
  2865 ;; This function is called by:
  2866 ;;		_TMR0_CallBack
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text22
  2871  00115A                     __ptext22:
  2872                           	opt stack 0
  2873  00115A                     i2_printf:
  2874                           	opt stack 19
  2875                           
  2876                           ;doprnt.c: 466: va_list ap;
  2877                           ;doprnt.c: 499: signed char c;
  2878                           ;doprnt.c: 506: signed char prec;
  2879                           ;doprnt.c: 508: unsigned char flag;
  2880                           ;doprnt.c: 523: union {
  2881                           ;doprnt.c: 524: unsigned long vd;
  2882                           ;doprnt.c: 525: double integ;
  2883                           ;doprnt.c: 526: } tmpval;
  2884                           ;doprnt.c: 528: unsigned int val;
  2885                           ;doprnt.c: 529: unsigned len;
  2886                           ;doprnt.c: 530: const char * cp;
  2887                           ;doprnt.c: 533: *ap = __va_start();
  2888                           
  2889                           ;incstack = 0
  2890  00115A  0E0F               	movlw	low (?i2_printf+2)
  2891  00115C  6E12               	movwf	i2printf@ap,c
  2892  00115E  0E00               	movlw	high (?i2_printf+2)
  2893  001160  6E13               	movwf	i2printf@ap+1,c
  2894                           
  2895                           ;doprnt.c: 536: while(c = *f++) {
  2896  001162  D084               	goto	i2u80_40
  2897  001164                     
  2898                           ;doprnt.c: 538: if(c != '%')
  2899  001164  0E25               	movlw	37
  2900  001166  1818               	xorwf	i2printf@c,w,c
  2901  001168  B4D8               	btfsc	status,2,c
  2902  00116A  D004               	goto	i2l317
  2903                           
  2904                           ;doprnt.c: 540: {
  2905                           ;doprnt.c: 541: (putch(c) );
  2906  00116C  5018               	movf	i2printf@c,w,c
  2907  00116E  ECC0  F00B         	call	i2_putch
  2908                           
  2909                           ;doprnt.c: 542: continue;
  2910  001172  D07C               	goto	i2u80_40
  2911  001174                     i2l317:
  2912                           
  2913                           ;doprnt.c: 543: }
  2914                           ;doprnt.c: 548: flag = 0;
  2915  001174  0E00               	movlw	0
  2916  001176  6E14               	movwf	i2printf@flag,c
  2917                           
  2918                           ;doprnt.c: 822: }
  2919                           
  2920                           ;doprnt.c: 813: continue;
  2921                           
  2922                           ;doprnt.c: 802: default:
  2923                           
  2924                           ;doprnt.c: 698: case 'i':
  2925                           ;doprnt.c: 699: break;
  2926                           
  2927                           ;doprnt.c: 697: case 'd':
  2928                           
  2929                           ;doprnt.c: 638: goto alldone;
  2930                           
  2931                           ;doprnt.c: 637: case 0:
  2932                           
  2933                           ;doprnt.c: 635: switch(c = *f++) {
  2934  001178  C00D  FFF6         	movff	i2printf@f,tblptrl
  2935  00117C  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  2936  001180  4A0D               	infsnz	i2printf@f,f,c
  2937  001182  2A0E               	incf	i2printf@f+1,f,c
  2938  001184                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2939  001184  6AF8               	clrf	tblptru,c
  2940  001186                     	endif
  2941  001186                     	if	0	;tblptru may be non-zero
  2942  001186                     	endif
  2943  001186  0008               	tblrd		*
  2944  001188  CFF5 F018          	movff	tablat,i2printf@c
  2945  00118C  5018               	movf	i2printf@c,w,c
  2946                           
  2947                           ; Switch size 1, requested type "space"
  2948                           ; Number of cases is 3, Range of values is 0 to 105
  2949                           ; switch strategies available:
  2950                           ; Name         Instructions Cycles
  2951                           ; simple_byte           10     6 (average)
  2952                           ;	Chosen strategy is simple_byte
  2953  00118E  0A00               	xorlw	0	; case 0
  2954  001190  B4D8               	btfsc	status,2,c
  2955  001192  0012               	return	
  2956  001194  0A64               	xorlw	100	; case 100
  2957  001196  B4D8               	btfsc	status,2,c
  2958  001198  D003               	goto	i2l323
  2959  00119A  0A0D               	xorlw	13	; case 105
  2960  00119C  A4D8               	btfss	status,2,c
  2961  00119E  D066               	goto	i2u80_40
  2962  0011A0                     i2l323:
  2963                           
  2964                           ;doprnt.c: 1253: {
  2965                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2966  0011A0  C012  FFD9         	movff	i2printf@ap,fsr2l
  2967  0011A4  C013  FFDA         	movff	i2printf@ap+1,fsr2h
  2968  0011A8  CFDE F016          	movff	postinc2,i2printf@val
  2969  0011AC  CFDD F017          	movff	postdec2,i2printf@val+1
  2970  0011B0  0E02               	movlw	2
  2971  0011B2  2612               	addwf	i2printf@ap,f,c
  2972  0011B4  0E00               	movlw	0
  2973  0011B6  2213               	addwfc	i2printf@ap+1,f,c
  2974                           
  2975                           ;doprnt.c: 1261: if((int)val < 0) {
  2976  0011B8  AE17               	btfss	i2printf@val+1,7,c
  2977  0011BA  D006               	goto	i2l325
  2978                           
  2979                           ;doprnt.c: 1262: flag |= 0x03;
  2980  0011BC  0E03               	movlw	3
  2981  0011BE  1214               	iorwf	i2printf@flag,f,c
  2982                           
  2983                           ;doprnt.c: 1263: val = -val;
  2984  0011C0  6C16               	negf	i2printf@val,c
  2985  0011C2  1E17               	comf	i2printf@val+1,f,c
  2986  0011C4  B0D8               	btfsc	status,0,c
  2987  0011C6  2A17               	incf	i2printf@val+1,f,c
  2988  0011C8                     i2l325:
  2989                           
  2990                           ;doprnt.c: 1264: }
  2991                           ;doprnt.c: 1266: }
  2992                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2993  0011C8  0E01               	movlw	1
  2994  0011CA  6E18               	movwf	i2printf@c,c
  2995  0011CC                     i2l1524:
  2996  0011CC  0E05               	movlw	5
  2997  0011CE  1818               	xorwf	i2printf@c,w,c
  2998  0011D0  B4D8               	btfsc	status,2,c
  2999  0011D2  D015               	goto	i2u78_40
  3000                           
  3001                           ;doprnt.c: 1306: if(val < dpowers[c])
  3002  0011D4  5018               	movf	i2printf@c,w,c
  3003  0011D6  0D02               	mullw	2
  3004  0011D8  0E01               	movlw	low _dpowers
  3005  0011DA  24F3               	addwf	prodl,w,c
  3006  0011DC  6EF6               	movwf	tblptrl,c
  3007  0011DE  0E10               	movlw	high _dpowers
  3008  0011E0  20F4               	addwfc	prodh,w,c
  3009  0011E2  6EF7               	movwf	tblptrh,c
  3010  0011E4                     	if	1	;There are 3 active tblptr bytes
  3011  0011E4  6AF8               	clrf	tblptru,c
  3012  0011E6  0E00               	movlw	low (__mediumconst shr (0+16))
  3013  0011E8  22F8               	addwfc	tblptru,f,c
  3014  0011EA                     	endif
  3015  0011EA  0009               	tblrd		*+
  3016  0011EC  50F5               	movf	tablat,w,c
  3017  0011EE  5C16               	subwf	i2printf@val,w,c
  3018  0011F0  0009               	tblrd		*+
  3019  0011F2  50F5               	movf	tablat,w,c
  3020  0011F4  5817               	subwfb	i2printf@val+1,w,c
  3021  0011F6  A0D8               	btfss	status,0,c
  3022  0011F8  D002               	goto	i2u78_40
  3023                           
  3024                           ;doprnt.c: 1307: break;
  3025  0011FA  2A18               	incf	i2printf@c,f,c
  3026  0011FC  D7E7               	goto	i2l1524
  3027  0011FE                     i2u78_40:
  3028                           
  3029                           ;doprnt.c: 1422: {
  3030                           ;doprnt.c: 1438: if(flag & 0x03)
  3031  0011FE  C014  F011         	movff	i2printf@flag,??i2_printf
  3032  001202  0E03               	movlw	3
  3033  001204  1611               	andwf	??i2_printf,f,c
  3034  001206  B4D8               	btfsc	status,2,c
  3035  001208  D003               	goto	i2l329
  3036                           
  3037                           ;doprnt.c: 1439: (putch('-') );
  3038  00120A  0E2D               	movlw	45
  3039  00120C  ECC0  F00B         	call	i2_putch
  3040  001210                     i2l329:
  3041                           
  3042                           ;doprnt.c: 1469: }
  3043                           ;doprnt.c: 1472: prec = c;
  3044  001210  C018  F015         	movff	i2printf@c,i2printf@prec
  3045                           
  3046                           ;doprnt.c: 1474: while(prec--) {
  3047  001214  D027               	goto	i2l330
  3048  001216                     
  3049                           ;doprnt.c: 1478: {
  3050                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3051  001216  5015               	movf	i2printf@prec,w,c
  3052  001218  0D02               	mullw	2
  3053  00121A  0E01               	movlw	low _dpowers
  3054  00121C  24F3               	addwf	prodl,w,c
  3055  00121E  6EF6               	movwf	tblptrl,c
  3056  001220  0E10               	movlw	high _dpowers
  3057  001222  20F4               	addwfc	prodh,w,c
  3058  001224  6EF7               	movwf	tblptrh,c
  3059  001226                     	if	1	;There are 3 active tblptr bytes
  3060  001226  6AF8               	clrf	tblptru,c
  3061  001228  0E00               	movlw	low (__mediumconst shr (0+16))
  3062  00122A  22F8               	addwfc	tblptru,f,c
  3063  00122C                     	endif
  3064  00122C  0009               	tblrd		*+
  3065  00122E  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  3066  001232  000A               	tblrd		*-
  3067  001234  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  3068  001238  C016  F001         	movff	i2printf@val,i2___lwdiv@dividend
  3069  00123C  C017  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  3070  001240  ECF0  F009         	call	i2___lwdiv	;wreg free
  3071  001244  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  3072  001248  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  3073  00124C  0E00               	movlw	0
  3074  00124E  6E0B               	movwf	i2___lwmod@divisor+1,c
  3075  001250  0E0A               	movlw	10
  3076  001252  6E0A               	movwf	i2___lwmod@divisor,c
  3077  001254  EC5C  F00A         	call	i2___lwmod	;wreg free
  3078  001258  5008               	movf	?i2___lwmod,w,c
  3079  00125A  0F30               	addlw	48
  3080  00125C  6E18               	movwf	i2printf@c,c
  3081                           
  3082                           ;doprnt.c: 1523: }
  3083                           ;doprnt.c: 1524: (putch(c) );
  3084  00125E  5018               	movf	i2printf@c,w,c
  3085  001260  ECC0  F00B         	call	i2_putch
  3086  001264                     i2l330:
  3087  001264  0615               	decf	i2printf@prec,f,c
  3088  001266  2815               	incf	i2printf@prec,w,c
  3089  001268  A4D8               	btfss	status,2,c
  3090  00126A  D7D5               	goto	i2l331
  3091  00126C                     i2u80_40:
  3092  00126C  C00D  FFF6         	movff	i2printf@f,tblptrl
  3093  001270  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  3094  001274  4A0D               	infsnz	i2printf@f,f,c
  3095  001276  2A0E               	incf	i2printf@f+1,f,c
  3096  001278                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3097  001278  6AF8               	clrf	tblptru,c
  3098  00127A                     	endif
  3099  00127A                     	if	0	;tblptru may be non-zero
  3100  00127A                     	endif
  3101  00127A  0008               	tblrd		*
  3102  00127C  CFF5 F018          	movff	tablat,i2printf@c
  3103  001280  5018               	movf	i2printf@c,w,c
  3104  001282  B4D8               	btfsc	status,2,c
  3105  001284  0012               	return	
  3106  001286  D76E               	goto	i2l316
  3107  001288                     __end_ofi2_printf:
  3108                           	opt stack 0
  3109                           tosu	equ	0xFFF
  3110                           tosh	equ	0xFFE
  3111                           tosl	equ	0xFFD
  3112                           pclatu	equ	0xFFB
  3113                           pclath	equ	0xFFA
  3114                           tblptru	equ	0xFF8
  3115                           tblptrh	equ	0xFF7
  3116                           tblptrl	equ	0xFF6
  3117                           tablat	equ	0xFF5
  3118                           prodh	equ	0xFF4
  3119                           prodl	equ	0xFF3
  3120                           intcon	equ	0xFF2
  3121                           intcon2	equ	0xFF1
  3122                           postinc0	equ	0xFEE
  3123                           fsr0h	equ	0xFEA
  3124                           fsr0l	equ	0xFE9
  3125                           wreg	equ	0xFE8
  3126                           fsr1h	equ	0xFE2
  3127                           fsr1l	equ	0xFE1
  3128                           bsr	equ	0xFE0
  3129                           indf2	equ	0xFDF
  3130                           postinc2	equ	0xFDE
  3131                           postdec2	equ	0xFDD
  3132                           fsr2h	equ	0xFDA
  3133                           fsr2l	equ	0xFD9
  3134                           status	equ	0xFD8
  3135                           
  3136 ;; *************** function i2_putch *****************
  3137 ;; Defined at:
  3138 ;;		line 160 in file "mcc_generated_files/eusart1.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  txData          1    wreg     unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  txData          1    1[COMRAM] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;Total ram usage:        1 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    1
  3159 ;; This function calls:
  3160 ;;		i2_EUSART1_Write
  3161 ;; This function is called by:
  3162 ;;		i2_printf
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text23
  3167  001780                     __ptext23:
  3168                           	opt stack 0
  3169  001780                     i2_putch:
  3170                           	opt stack 19
  3171                           
  3172                           ;incstack = 0
  3173                           ;i2putch@txData stored from wreg
  3174  001780  6E02               	movwf	i2putch@txData,c
  3175                           
  3176                           ;eusart1.c: 162: EUSART1_Write(txData);
  3177  001782  5002               	movf	i2putch@txData,w,c
  3178  001784  ECD5  F00A         	call	i2_EUSART1_Write
  3179  001788  0012               	return		;funcret
  3180  00178A                     __end_ofi2_putch:
  3181                           	opt stack 0
  3182                           tosu	equ	0xFFF
  3183                           tosh	equ	0xFFE
  3184                           tosl	equ	0xFFD
  3185                           pclatu	equ	0xFFB
  3186                           pclath	equ	0xFFA
  3187                           tblptru	equ	0xFF8
  3188                           tblptrh	equ	0xFF7
  3189                           tblptrl	equ	0xFF6
  3190                           tablat	equ	0xFF5
  3191                           prodh	equ	0xFF4
  3192                           prodl	equ	0xFF3
  3193                           intcon	equ	0xFF2
  3194                           intcon2	equ	0xFF1
  3195                           postinc0	equ	0xFEE
  3196                           fsr0h	equ	0xFEA
  3197                           fsr0l	equ	0xFE9
  3198                           wreg	equ	0xFE8
  3199                           fsr1h	equ	0xFE2
  3200                           fsr1l	equ	0xFE1
  3201                           bsr	equ	0xFE0
  3202                           indf2	equ	0xFDF
  3203                           postinc2	equ	0xFDE
  3204                           postdec2	equ	0xFDD
  3205                           fsr2h	equ	0xFDA
  3206                           fsr2l	equ	0xFD9
  3207                           status	equ	0xFD8
  3208                           
  3209 ;; *************** function i2_EUSART1_Write *****************
  3210 ;; Defined at:
  3211 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  txData          1    wreg     unsigned char 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  txData          1    0[COMRAM] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;Total ram usage:        1 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		i2_putch
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text24
  3239  0015AA                     __ptext24:
  3240                           	opt stack 0
  3241  0015AA                     i2_EUSART1_Write:
  3242                           	opt stack 19
  3243                           
  3244                           ;incstack = 0
  3245                           ;i2EUSART1_Write@txData stored from wreg
  3246  0015AA  6E01               	movwf	i2EUSART1_Write@txData,c
  3247  0015AC                     
  3248                           ;eusart1.c: 135: {
  3249                           
  3250                           ;eusart1.c: 134: while(0 == eusart1TxBufferRemaining)
  3251  0015AC  5049               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  3252  0015AE  B4D8               	btfsc	status,2,c
  3253  0015B0  D7FD               	goto	i2l1372
  3254                           
  3255                           ;eusart1.c: 136: }
  3256                           ;eusart1.c: 138: if(0 == PIE1bits.TX1IE)
  3257  0015B2  B89D               	btfsc	3997,4,c	;volatile
  3258  0015B4  D003               	goto	i2l151
  3259                           
  3260                           ;eusart1.c: 139: {
  3261                           ;eusart1.c: 140: TXREG1 = txData;
  3262  0015B6  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
  3263                           
  3264                           ;eusart1.c: 141: }
  3265  0015BA  D012               	goto	i2l152
  3266  0015BC                     i2l151:
  3267                           
  3268                           ;eusart1.c: 142: else
  3269                           ;eusart1.c: 143: {
  3270                           ;eusart1.c: 144: PIE1bits.TX1IE = 0;
  3271  0015BC  989D               	bcf	3997,4,c	;volatile
  3272                           
  3273                           ;eusart1.c: 145: eusart1TxBuffer[eusart1TxHead++] = txData;
  3274  0015BE  5044               	movf	_eusart1TxHead,w,c	;volatile
  3275  0015C0  0D01               	mullw	1
  3276  0015C2  0E36               	movlw	low _eusart1TxBuffer
  3277  0015C4  24F3               	addwf	prodl,w,c
  3278  0015C6  6ED9               	movwf	fsr2l,c
  3279  0015C8  0E00               	movlw	high _eusart1TxBuffer
  3280  0015CA  20F4               	addwfc	prodh,w,c
  3281  0015CC  6EDA               	movwf	fsr2h,c
  3282  0015CE  C001  FFDF         	movff	i2EUSART1_Write@txData,indf2
  3283  0015D2  2A44               	incf	_eusart1TxHead,f,c	;volatile
  3284                           
  3285                           ;eusart1.c: 146: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  3286  0015D4  0E07               	movlw	7
  3287  0015D6  6444               	cpfsgt	_eusart1TxHead,c	;volatile
  3288  0015D8  D002               	goto	i2l153
  3289                           
  3290                           ;eusart1.c: 147: {
  3291                           ;eusart1.c: 148: eusart1TxHead = 0;
  3292  0015DA  0E00               	movlw	0
  3293  0015DC  6E44               	movwf	_eusart1TxHead,c	;volatile
  3294  0015DE                     i2l153:
  3295                           
  3296                           ;eusart1.c: 149: }
  3297                           ;eusart1.c: 150: eusart1TxBufferRemaining--;
  3298  0015DE  0649               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  3299  0015E0                     i2l152:
  3300                           
  3301                           ;eusart1.c: 151: }
  3302                           ;eusart1.c: 152: PIE1bits.TX1IE = 1;
  3303  0015E0  889D               	bsf	3997,4,c	;volatile
  3304  0015E2  0012               	return		;funcret
  3305  0015E4                     __end_ofi2_EUSART1_Write:
  3306                           	opt stack 0
  3307                           tosu	equ	0xFFF
  3308                           tosh	equ	0xFFE
  3309                           tosl	equ	0xFFD
  3310                           pclatu	equ	0xFFB
  3311                           pclath	equ	0xFFA
  3312                           tblptru	equ	0xFF8
  3313                           tblptrh	equ	0xFF7
  3314                           tblptrl	equ	0xFF6
  3315                           tablat	equ	0xFF5
  3316                           prodh	equ	0xFF4
  3317                           prodl	equ	0xFF3
  3318                           intcon	equ	0xFF2
  3319                           intcon2	equ	0xFF1
  3320                           postinc0	equ	0xFEE
  3321                           fsr0h	equ	0xFEA
  3322                           fsr0l	equ	0xFE9
  3323                           wreg	equ	0xFE8
  3324                           fsr1h	equ	0xFE2
  3325                           fsr1l	equ	0xFE1
  3326                           bsr	equ	0xFE0
  3327                           indf2	equ	0xFDF
  3328                           postinc2	equ	0xFDE
  3329                           postdec2	equ	0xFDD
  3330                           fsr2h	equ	0xFDA
  3331                           fsr2l	equ	0xFD9
  3332                           status	equ	0xFD8
  3333                           
  3334 ;; *************** function i2___lwmod *****************
  3335 ;; Defined at:
  3336 ;;		line 8 in file "/Applications/microchip/xc8/v1.44/sources/common/lwmod.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  dividend        2    7[COMRAM] unsigned int 
  3339 ;;  divisor         2    9[COMRAM] unsigned int 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  __lwmod         1   11[COMRAM] unsigned char 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  2    7[COMRAM] unsigned int 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;Total ram usage:        5 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		i2_printf
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text25
  3365  0014B8                     __ptext25:
  3366                           	opt stack 0
  3367  0014B8                     i2___lwmod:
  3368                           	opt stack 20
  3369                           
  3370                           ;incstack = 0
  3371  0014B8  500A               	movf	i2___lwmod@divisor,w,c
  3372  0014BA  100B               	iorwf	i2___lwmod@divisor+1,w,c
  3373  0014BC  B4D8               	btfsc	status,2,c
  3374  0014BE  D018               	goto	i2l753
  3375  0014C0  0E01               	movlw	1
  3376  0014C2  6E0C               	movwf	i2___lwmod@counter,c
  3377  0014C4  D004               	goto	i2l748
  3378  0014C6  90D8               	bcf	status,0,c
  3379  0014C8  360A               	rlcf	i2___lwmod@divisor,f,c
  3380  0014CA  360B               	rlcf	i2___lwmod@divisor+1,f,c
  3381  0014CC  2A0C               	incf	i2___lwmod@counter,f,c
  3382  0014CE                     i2l748:
  3383  0014CE  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  3384  0014D0  D7FA               	goto	i2l749
  3385  0014D2                     i2u65_40:
  3386  0014D2  500A               	movf	i2___lwmod@divisor,w,c
  3387  0014D4  5C08               	subwf	i2___lwmod@dividend,w,c
  3388  0014D6  500B               	movf	i2___lwmod@divisor+1,w,c
  3389  0014D8  5809               	subwfb	i2___lwmod@dividend+1,w,c
  3390  0014DA  A0D8               	btfss	status,0,c
  3391  0014DC  D004               	goto	i2l752
  3392  0014DE  500A               	movf	i2___lwmod@divisor,w,c
  3393  0014E0  5E08               	subwf	i2___lwmod@dividend,f,c
  3394  0014E2  500B               	movf	i2___lwmod@divisor+1,w,c
  3395  0014E4  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  3396  0014E6                     i2l752:
  3397  0014E6  90D8               	bcf	status,0,c
  3398  0014E8  320B               	rrcf	i2___lwmod@divisor+1,f,c
  3399  0014EA  320A               	rrcf	i2___lwmod@divisor,f,c
  3400  0014EC  2E0C               	decfsz	i2___lwmod@counter,f,c
  3401  0014EE  D7F1               	goto	i2u65_40
  3402  0014F0                     i2l753:
  3403  0014F0  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  3404  0014F4  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  3405  0014F8  0012               	return		;funcret
  3406  0014FA                     __end_ofi2___lwmod:
  3407                           	opt stack 0
  3408                           tosu	equ	0xFFF
  3409                           tosh	equ	0xFFE
  3410                           tosl	equ	0xFFD
  3411                           pclatu	equ	0xFFB
  3412                           pclath	equ	0xFFA
  3413                           tblptru	equ	0xFF8
  3414                           tblptrh	equ	0xFF7
  3415                           tblptrl	equ	0xFF6
  3416                           tablat	equ	0xFF5
  3417                           prodh	equ	0xFF4
  3418                           prodl	equ	0xFF3
  3419                           intcon	equ	0xFF2
  3420                           intcon2	equ	0xFF1
  3421                           postinc0	equ	0xFEE
  3422                           fsr0h	equ	0xFEA
  3423                           fsr0l	equ	0xFE9
  3424                           wreg	equ	0xFE8
  3425                           fsr1h	equ	0xFE2
  3426                           fsr1l	equ	0xFE1
  3427                           bsr	equ	0xFE0
  3428                           indf2	equ	0xFDF
  3429                           postinc2	equ	0xFDE
  3430                           postdec2	equ	0xFDD
  3431                           fsr2h	equ	0xFDA
  3432                           fsr2l	equ	0xFD9
  3433                           status	equ	0xFD8
  3434                           
  3435 ;; *************** function i2___lwdiv *****************
  3436 ;; Defined at:
  3437 ;;		line 8 in file "/Applications/microchip/xc8/v1.44/sources/common/lwdiv.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  dividend        2    0[COMRAM] unsigned int 
  3440 ;;  divisor         2    2[COMRAM] unsigned int 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  3443 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  2    0[COMRAM] unsigned int 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3453 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;Total ram usage:        7 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		i2_printf
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text26
  3467  0013E0                     __ptext26:
  3468                           	opt stack 0
  3469  0013E0                     i2___lwdiv:
  3470                           	opt stack 20
  3471                           
  3472                           ;incstack = 0
  3473  0013E0  0E00               	movlw	0
  3474  0013E2  6E06               	movwf	i2___lwdiv@quotient+1,c
  3475  0013E4  0E00               	movlw	0
  3476  0013E6  6E05               	movwf	i2___lwdiv@quotient,c
  3477  0013E8  5003               	movf	i2___lwdiv@divisor,w,c
  3478  0013EA  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  3479  0013EC  B4D8               	btfsc	status,2,c
  3480  0013EE  D01C               	goto	i2l743
  3481  0013F0  0E01               	movlw	1
  3482  0013F2  6E07               	movwf	i2___lwdiv@counter,c
  3483  0013F4  D004               	goto	i2l738
  3484  0013F6  90D8               	bcf	status,0,c
  3485  0013F8  3603               	rlcf	i2___lwdiv@divisor,f,c
  3486  0013FA  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  3487  0013FC  2A07               	incf	i2___lwdiv@counter,f,c
  3488  0013FE                     i2l738:
  3489  0013FE  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  3490  001400  D7FA               	goto	i2l739
  3491  001402                     i2u62_40:
  3492  001402  90D8               	bcf	status,0,c
  3493  001404  3605               	rlcf	i2___lwdiv@quotient,f,c
  3494  001406  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  3495  001408  5003               	movf	i2___lwdiv@divisor,w,c
  3496  00140A  5C01               	subwf	i2___lwdiv@dividend,w,c
  3497  00140C  5004               	movf	i2___lwdiv@divisor+1,w,c
  3498  00140E  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  3499  001410  A0D8               	btfss	status,0,c
  3500  001412  D005               	goto	i2l742
  3501  001414  5003               	movf	i2___lwdiv@divisor,w,c
  3502  001416  5E01               	subwf	i2___lwdiv@dividend,f,c
  3503  001418  5004               	movf	i2___lwdiv@divisor+1,w,c
  3504  00141A  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  3505  00141C  8005               	bsf	i2___lwdiv@quotient,0,c
  3506  00141E                     i2l742:
  3507  00141E  90D8               	bcf	status,0,c
  3508  001420  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  3509  001422  3203               	rrcf	i2___lwdiv@divisor,f,c
  3510  001424  2E07               	decfsz	i2___lwdiv@counter,f,c
  3511  001426  D7ED               	goto	i2u62_40
  3512  001428                     i2l743:
  3513  001428  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  3514  00142C  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  3515  001430  0012               	return		;funcret
  3516  001432                     __end_ofi2___lwdiv:
  3517                           	opt stack 0
  3518                           tosu	equ	0xFFF
  3519                           tosh	equ	0xFFE
  3520                           tosl	equ	0xFFD
  3521                           pclatu	equ	0xFFB
  3522                           pclath	equ	0xFFA
  3523                           tblptru	equ	0xFF8
  3524                           tblptrh	equ	0xFF7
  3525                           tblptrl	equ	0xFF6
  3526                           tablat	equ	0xFF5
  3527                           prodh	equ	0xFF4
  3528                           prodl	equ	0xFF3
  3529                           intcon	equ	0xFF2
  3530                           intcon2	equ	0xFF1
  3531                           postinc0	equ	0xFEE
  3532                           fsr0h	equ	0xFEA
  3533                           fsr0l	equ	0xFE9
  3534                           wreg	equ	0xFE8
  3535                           fsr1h	equ	0xFE2
  3536                           fsr1l	equ	0xFE1
  3537                           bsr	equ	0xFE0
  3538                           indf2	equ	0xFDF
  3539                           postinc2	equ	0xFDE
  3540                           postdec2	equ	0xFDD
  3541                           fsr2h	equ	0xFDA
  3542                           fsr2l	equ	0xFD9
  3543                           status	equ	0xFD8
  3544                           
  3545 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3546 ;; Defined at:
  3547 ;;		line 175 in file "mcc_generated_files/tmr0.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		None
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_TMR0_Initialize
  3571 ;;		_TMR0_CallBack
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text27
  3576  00178E                     __ptext27:
  3577                           	opt stack 0
  3578  00178E                     _TMR0_DefaultInterruptHandler:
  3579                           	opt stack 21
  3580                           
  3581                           ;incstack = 0
  3582  00178E  0012               	return		;funcret
  3583  001790                     __end_of_TMR0_DefaultInterruptHandler:
  3584                           	opt stack 0
  3585                           tosu	equ	0xFFF
  3586                           tosh	equ	0xFFE
  3587                           tosl	equ	0xFFD
  3588                           pclatu	equ	0xFFB
  3589                           pclath	equ	0xFFA
  3590                           tblptru	equ	0xFF8
  3591                           tblptrh	equ	0xFF7
  3592                           tblptrl	equ	0xFF6
  3593                           tablat	equ	0xFF5
  3594                           prodh	equ	0xFF4
  3595                           prodl	equ	0xFF3
  3596                           intcon	equ	0xFF2
  3597                           intcon2	equ	0xFF1
  3598                           postinc0	equ	0xFEE
  3599                           fsr0h	equ	0xFEA
  3600                           fsr0l	equ	0xFE9
  3601                           wreg	equ	0xFE8
  3602                           fsr1h	equ	0xFE2
  3603                           fsr1l	equ	0xFE1
  3604                           bsr	equ	0xFE0
  3605                           indf2	equ	0xFDF
  3606                           postinc2	equ	0xFDE
  3607                           postdec2	equ	0xFDD
  3608                           fsr2h	equ	0xFDA
  3609                           fsr2l	equ	0xFD9
  3610                           status	equ	0xFD8
  3611                           
  3612 ;; *************** function _ADC_GetConversion *****************
  3613 ;; Defined at:
  3614 ;;		line 106 in file "mcc_generated_files/adc.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  channel         1    wreg     enum E6990
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  channel         1    4[COMRAM] enum E6990
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  2    0[COMRAM] unsigned int 
  3621 ;; Registers used:
  3622 ;;		wreg, status,2, status,0
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;Total ram usage:        5 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_TMR0_CallBack
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text28
  3642  00164A                     __ptext28:
  3643                           	opt stack 0
  3644  00164A                     _ADC_GetConversion:
  3645                           	opt stack 21
  3646                           
  3647                           ;incstack = 0
  3648                           ;ADC_GetConversion@channel stored from wreg
  3649  00164A  6E05               	movwf	ADC_GetConversion@channel,c
  3650                           
  3651                           ;adc.c: 109: ADCON0bits.CHS = channel;
  3652  00164C  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  3653  001650  4603               	rlncf	??_ADC_GetConversion,f,c
  3654  001652  4603               	rlncf	??_ADC_GetConversion,f,c
  3655  001654  50C2               	movf	4034,w,c	;volatile
  3656  001656  1803               	xorwf	??_ADC_GetConversion,w,c
  3657  001658  0B83               	andlw	-125
  3658  00165A  1803               	xorwf	??_ADC_GetConversion,w,c
  3659  00165C  6EC2               	movwf	4034,c	;volatile
  3660                           
  3661                           ;adc.c: 112: ADCON0bits.ADON = 1;
  3662  00165E  80C2               	bsf	4034,0,c	;volatile
  3663                           
  3664                           ;adc.c: 115: ADCON0bits.GO_nDONE = 1;
  3665  001660  82C2               	bsf	4034,1,c	;volatile
  3666  001662                     
  3667                           ;adc.c: 119: {
  3668  001662  B2C2               	btfsc	4034,1,c	;volatile
  3669  001664  D7FE               	goto	i2l302
  3670                           
  3671                           ;adc.c: 120: }
  3672                           ;adc.c: 123: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3673  001666  50C4               	movf	4036,w,c	;volatile
  3674  001668  6E04               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  3675  00166A  6A03               	clrf	??_ADC_GetConversion& (0+255),c
  3676  00166C  50C3               	movf	4035,w,c	;volatile
  3677  00166E  2403               	addwf	??_ADC_GetConversion,w,c
  3678  001670  6E01               	movwf	?_ADC_GetConversion,c
  3679  001672  0E00               	movlw	0
  3680  001674  2004               	addwfc	??_ADC_GetConversion+1,w,c
  3681  001676  6E02               	movwf	?_ADC_GetConversion+1,c
  3682  001678  0012               	return	
  3683  00167A                     __end_of_ADC_GetConversion:
  3684                           	opt stack 0
  3685                           tosu	equ	0xFFF
  3686                           tosh	equ	0xFFE
  3687                           tosl	equ	0xFFD
  3688                           pclatu	equ	0xFFB
  3689                           pclath	equ	0xFFA
  3690                           tblptru	equ	0xFF8
  3691                           tblptrh	equ	0xFF7
  3692                           tblptrl	equ	0xFF6
  3693                           tablat	equ	0xFF5
  3694                           prodh	equ	0xFF4
  3695                           prodl	equ	0xFF3
  3696                           intcon	equ	0xFF2
  3697                           intcon2	equ	0xFF1
  3698                           postinc0	equ	0xFEE
  3699                           fsr0h	equ	0xFEA
  3700                           fsr0l	equ	0xFE9
  3701                           wreg	equ	0xFE8
  3702                           fsr1h	equ	0xFE2
  3703                           fsr1l	equ	0xFE1
  3704                           bsr	equ	0xFE0
  3705                           indf2	equ	0xFDF
  3706                           postinc2	equ	0xFDE
  3707                           postdec2	equ	0xFDD
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _EUSART1_Receive_ISR *****************
  3713 ;; Defined at:
  3714 ;;		line 184 in file "mcc_generated_files/eusart1.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_INTERRUPT_InterruptManagerHigh
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text29
  3742  0016A8                     __ptext29:
  3743                           	opt stack 0
  3744  0016A8                     _EUSART1_Receive_ISR:
  3745                           	opt stack 23
  3746                           
  3747                           ;eusart1.c: 187: if(1 == RCSTA1bits.OERR)
  3748                           
  3749                           ;incstack = 0
  3750  0016A8  A2AB               	btfss	4011,1,c	;volatile
  3751  0016AA  D002               	goto	i2l169
  3752                           
  3753                           ;eusart1.c: 188: {
  3754                           ;eusart1.c: 191: RCSTA1bits.CREN = 0;
  3755  0016AC  98AB               	bcf	4011,4,c	;volatile
  3756                           
  3757                           ;eusart1.c: 192: RCSTA1bits.CREN = 1;
  3758  0016AE  88AB               	bsf	4011,4,c	;volatile
  3759  0016B0                     i2l169:
  3760                           
  3761                           ;eusart1.c: 193: }
  3762                           ;eusart1.c: 196: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  3763  0016B0  5042               	movf	_eusart1RxHead,w,c	;volatile
  3764  0016B2  0D01               	mullw	1
  3765  0016B4  0E2E               	movlw	low _eusart1RxBuffer
  3766  0016B6  24F3               	addwf	prodl,w,c
  3767  0016B8  6ED9               	movwf	fsr2l,c
  3768  0016BA  0E00               	movlw	high _eusart1RxBuffer
  3769  0016BC  20F4               	addwfc	prodh,w,c
  3770  0016BE  6EDA               	movwf	fsr2h,c
  3771  0016C0  CFAE FFDF          	movff	4014,indf2	;volatile
  3772  0016C4  2A42               	incf	_eusart1RxHead,f,c	;volatile
  3773                           
  3774                           ;eusart1.c: 197: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3775  0016C6  0E07               	movlw	7
  3776  0016C8  6442               	cpfsgt	_eusart1RxHead,c	;volatile
  3777  0016CA  D002               	goto	i2l170
  3778                           
  3779                           ;eusart1.c: 198: {
  3780                           ;eusart1.c: 199: eusart1RxHead = 0;
  3781  0016CC  0E00               	movlw	0
  3782  0016CE  6E42               	movwf	_eusart1RxHead,c	;volatile
  3783  0016D0                     i2l170:
  3784                           
  3785                           ;eusart1.c: 200: }
  3786                           ;eusart1.c: 201: eusart1RxCount++;
  3787  0016D0  2A40               	incf	_eusart1RxCount,f,c	;volatile
  3788  0016D2  0012               	return		;funcret
  3789  0016D4                     __end_of_EUSART1_Receive_ISR:
  3790                           	opt stack 0
  3791                           tosu	equ	0xFFF
  3792                           tosh	equ	0xFFE
  3793                           tosl	equ	0xFFD
  3794                           pclatu	equ	0xFFB
  3795                           pclath	equ	0xFFA
  3796                           tblptru	equ	0xFF8
  3797                           tblptrh	equ	0xFF7
  3798                           tblptrl	equ	0xFF6
  3799                           tablat	equ	0xFF5
  3800                           prodh	equ	0xFF4
  3801                           prodl	equ	0xFF3
  3802                           intcon	equ	0xFF2
  3803                           intcon2	equ	0xFF1
  3804                           postinc0	equ	0xFEE
  3805                           fsr0h	equ	0xFEA
  3806                           fsr0l	equ	0xFE9
  3807                           wreg	equ	0xFE8
  3808                           fsr1h	equ	0xFE2
  3809                           fsr1l	equ	0xFE1
  3810                           bsr	equ	0xFE0
  3811                           indf2	equ	0xFDF
  3812                           postinc2	equ	0xFDE
  3813                           postdec2	equ	0xFDD
  3814                           fsr2h	equ	0xFDA
  3815                           fsr2l	equ	0xFD9
  3816                           status	equ	0xFD8
  3817                           tosu	equ	0xFFF
  3818                           tosh	equ	0xFFE
  3819                           tosl	equ	0xFFD
  3820                           pclatu	equ	0xFFB
  3821                           pclath	equ	0xFFA
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           prodh	equ	0xFF4
  3827                           prodl	equ	0xFF3
  3828                           intcon	equ	0xFF2
  3829                           intcon2	equ	0xFF1
  3830                           postinc0	equ	0xFEE
  3831                           fsr0h	equ	0xFEA
  3832                           fsr0l	equ	0xFE9
  3833                           wreg	equ	0xFE8
  3834                           fsr1h	equ	0xFE2
  3835                           fsr1l	equ	0xFE1
  3836                           bsr	equ	0xFE0
  3837                           indf2	equ	0xFDF
  3838                           postinc2	equ	0xFDE
  3839                           postdec2	equ	0xFDD
  3840                           fsr2h	equ	0xFDA
  3841                           fsr2l	equ	0xFD9
  3842                           status	equ	0xFD8
  3843                           
  3844                           	psect	text30
  3845  000000                     __ptext30:
  3846                           	opt stack 0
  3847                           tosu	equ	0xFFF
  3848                           tosh	equ	0xFFE
  3849                           tosl	equ	0xFFD
  3850                           pclatu	equ	0xFFB
  3851                           pclath	equ	0xFFA
  3852                           tblptru	equ	0xFF8
  3853                           tblptrh	equ	0xFF7
  3854                           tblptrl	equ	0xFF6
  3855                           tablat	equ	0xFF5
  3856                           prodh	equ	0xFF4
  3857                           prodl	equ	0xFF3
  3858                           intcon	equ	0xFF2
  3859                           intcon2	equ	0xFF1
  3860                           postinc0	equ	0xFEE
  3861                           fsr0h	equ	0xFEA
  3862                           fsr0l	equ	0xFE9
  3863                           wreg	equ	0xFE8
  3864                           fsr1h	equ	0xFE2
  3865                           fsr1l	equ	0xFE1
  3866                           bsr	equ	0xFE0
  3867                           indf2	equ	0xFDF
  3868                           postinc2	equ	0xFDE
  3869                           postdec2	equ	0xFDD
  3870                           fsr2h	equ	0xFDA
  3871                           fsr2l	equ	0xFD9
  3872                           status	equ	0xFD8
  3873                           
  3874                           	psect	rparam
  3875  0000                     tosu	equ	0xFFF
  3876                           tosh	equ	0xFFE
  3877                           tosl	equ	0xFFD
  3878                           pclatu	equ	0xFFB
  3879                           pclath	equ	0xFFA
  3880                           tblptru	equ	0xFF8
  3881                           tblptrh	equ	0xFF7
  3882                           tblptrl	equ	0xFF6
  3883                           tablat	equ	0xFF5
  3884                           prodh	equ	0xFF4
  3885                           prodl	equ	0xFF3
  3886                           intcon	equ	0xFF2
  3887                           intcon2	equ	0xFF1
  3888                           postinc0	equ	0xFEE
  3889                           fsr0h	equ	0xFEA
  3890                           fsr0l	equ	0xFE9
  3891                           wreg	equ	0xFE8
  3892                           fsr1h	equ	0xFE2
  3893                           fsr1l	equ	0xFE1
  3894                           bsr	equ	0xFE0
  3895                           indf2	equ	0xFDF
  3896                           postinc2	equ	0xFDE
  3897                           postdec2	equ	0xFDD
  3898                           fsr2h	equ	0xFDA
  3899                           fsr2l	equ	0xFD9
  3900                           status	equ	0xFD8
  3901                           
  3902                           	psect	temp
  3903  00004A                     btemp:
  3904                           	opt stack 0
  3905  00004A                     	ds	1
  3906  0000                     int$flags	set	btemp
  3907  0000                     wtemp6	set	btemp+1
  3908                           tosu	equ	0xFFF
  3909                           tosh	equ	0xFFE
  3910                           tosl	equ	0xFFD
  3911                           pclatu	equ	0xFFB
  3912                           pclath	equ	0xFFA
  3913                           tblptru	equ	0xFF8
  3914                           tblptrh	equ	0xFF7
  3915                           tblptrl	equ	0xFF6
  3916                           tablat	equ	0xFF5
  3917                           prodh	equ	0xFF4
  3918                           prodl	equ	0xFF3
  3919                           intcon	equ	0xFF2
  3920                           intcon2	equ	0xFF1
  3921                           postinc0	equ	0xFEE
  3922                           fsr0h	equ	0xFEA
  3923                           fsr0l	equ	0xFE9
  3924                           wreg	equ	0xFE8
  3925                           fsr1h	equ	0xFE2
  3926                           fsr1l	equ	0xFE1
  3927                           bsr	equ	0xFE0
  3928                           indf2	equ	0xFDF
  3929                           postinc2	equ	0xFDE
  3930                           postdec2	equ	0xFDD
  3931                           fsr2h	equ	0xFDA
  3932                           fsr2l	equ	0xFD9
  3933                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    10
    Data        0
    BSS         23
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      73
    BANK0           160     44      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[8]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK0[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR0_ISR->_TMR0_CallBack
    _TMR0_CallBack->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_EUSART1_Write
    i2___lwmod->i2___lwdiv

Critical Paths under _main in BANK0

    _main->_app
    _app->_printf
    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1913
                  _SYSTEM_Initialize
                                _app
 ---------------------------------------------------------------------------------
 (1) _app                                                  1     1      0    1792
                                             43 BANK0      1     1      0
                            _delayMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2    1634
                                             33 BANK0     10     8      2
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                             22 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      62
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                             28 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                             21 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _delayMs                                              5     3      2     158
                                             21 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     121
                                             23 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                             21 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManagerLow                       21    21      0       0
                                              0 BANK0     21    21      0
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManagerHigh                      18    18      0     948
                                             27 COMRAM    18    18      0
                _EUSART1_Receive_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0     948
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        3     3      0     948
                                             24 COMRAM     3     3      0
                   Absolute function *
                  _ADC_GetConversion
       _TMR0_DefaultInterruptHandler *
                           i2_printf
 ---------------------------------------------------------------------------------
 (10) i2_printf                                           21    17      4     903
                                             12 COMRAM    12     8      4
                          i2___lwdiv
                          i2___lwmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (11) i2_putch                                             1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (12) i2_EUSART1_Write                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (10) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ADC_GetConversion                                   5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   _app
     _delayMs
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART1_Write

 _INTERRUPT_InterruptManagerLow (ROOT)
   _EUSART1_Transmit_ISR

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _EUSART1_Receive_ISR
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _ADC_GetConversion *
       _TMR0_DefaultInterruptHandler *
       i2_printf *
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
         i2_putch
           i2_EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      2C       5       27.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      49       1       77.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      75      12        0.0%
DATA                 0      0      75       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Nov 21 06:46:08 2017

                _eusart1TxBufferRemaining 0049                                        bsr 000FE0  
                      i2___lwdiv@dividend 0001                           _timer0ReloadVal 0045  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l151 150E                                       l152 1532  
                                     l153 1530                                       l330 1132  
                                     l331 10DE                                       l323 1068  
                                     l316 102A                                       l325 1090  
                                     l317 103A                                       l190 163C  
                                     l182 174A                                       l191 1624  
                                     l329 10D8                                       l742 13CC  
                                     l743 13D6                                       l752 1462  
                                     l753 146C                                       l738 13AC  
                                     l739 13A4                                       l748 144A  
                                     l749 1442                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       _app 1536  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8                              __CFG_LVP$OFF 000000  
                                    ?_app 0001                                      l1808 1094  
                                    l1684 14FE                                      STR_1 100B  
                                    STR_2 1014                                      u1100 144E  
                                    u1070 13B0                                      u1240 1550  
                                    u1170 10C6                                      _LATA 000F89  
                                    u1190 113C                                      u1246 1552  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u1277 162C                                      i2l90 12DC  
                                    i1l99 0078                                      i2l92 12E6  
                                    _WPUB 000F61                             _EUSART1_Write 14FA  
                                    _main 1742                           _TMR0_StartTimer 178A  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0005                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004A                             __CFG_BORV$285 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00D0                             __CFG_IESO$OFF 000000  
                         __end_ofi2_putch 178A                              ___param_bank 000000  
                __size_ofi2_EUSART1_Write 003A                                     ??_app 008B  
                 __end_of_TMR0_Initialize 15AA            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 176C  
                                   ?_main 0001                                     _T0CON 000FD5  
                          __CFG_DEBUG$OFF 000000                           __end_of___lwdiv 13E0  
                                   i1l163 16A4                                     i1l164 16A0  
                         __end_of___lwmod 1476                                     i2l302 1662  
                                   i2l151 15BC                                     i2l152 15E0  
                                   i2l153 15DE                                     i2l170 16D0  
                                   i2l330 1264                                     i2l331 1216  
                                   i2l323 11A0                                     i2l316 1164  
                                   i2l325 11C8                                     i2l317 1174  
                                   i2l169 16B0                                     i2l329 1210  
                                   i2l742 141E                                     i2l743 1428  
                                   i2l752 14E6                                     i2l753 14F0  
                                   i2l738 13FE                                     i2l739 13F6  
                                   i2l748 14CE                                     i2l749 14C6  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96         __size_of_TMR0_SetInterruptHandler 000A  
                         __end_of_delayMs 164A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 0075                             __CFG_WRT3$OFF 000000  
                    _EUSART1_Transmit_ISR 167A                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 16FC                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                           __end_of_dpowers 100B  
                      __CFG_MCLRE$EXTMCLR 000000                                     _putch 1750  
                          ?_EUSART1_Write 0001                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                                   wtemp6 004B                            __CFG_HFOFST$ON 000000  
                          __CFG_FOSC$HSMP 000000            ?_INTERRUPT_InterruptManagerLow 0001  
                        __end_ofi2_printf 1288                        __size_ofi2___lwdiv 0052  
                      __size_ofi2___lwmod 0042                           __initialization 1716  
              __end_of_EUSART1_Initialize 1618                              __end_of_main 1750  
                              i2printf@ap 0012                                    ??_main 008C  
                           __activetblptr 000003                     ?_EUSART1_Transmit_ISR 0001  
                 __end_of_TMR0_StartTimer 178E                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _ANSELA 000F38                                    ?_putch 0001  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                                  i2l1372 15AC                                    i2l1524 11CC  
                          __CFG_WDTEN$OFF 000000                             i2putch@txData 0002  
                                  _RCREG1 000FAE                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                               ??i2_putch 0002                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                            __CFG_PWRTEN$ON 000000  
                          __CFG_XINST$OFF 000000                            __CFG_STVREN$ON 000000  
                               ??___lwdiv 0079                                 ??___lwmod 0080  
                        ?_TMR0_Initialize 0001                                    clear_0 171C  
                               ??_delayMs 0077                                    _printf 101E  
                       ??i2_EUSART1_Write 0001                         __end_ofi2___lwdiv 1432  
                            __mediumconst 0000                         __end_ofi2___lwmod 14FA  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                  ADC_GetConversion@channel 0005  
                   __end_of_TMR0_CallBack 138C                           ??_EUSART1_Write 0075  
TMR0_SetInterruptHandler@InterruptHandler 0075                           _eusart1RxBuffer 002E  
           __size_of_INTERRUPT_Initialize 000A                           _eusart1TxBuffer 0036  
        ??_INTERRUPT_InterruptManagerHigh 001C           ?_INTERRUPT_InterruptManagerHigh 0001  
                       _SYSTEM_Initialize 16FC                                __accesstop 0060  
                 __end_of__initialization 1722                           __CFG_PBADEN$OFF 000000  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                      i2___lwmod@dividend 0008                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0079                                 ?_TMR0_ISR 0001  
                           __end_of_putch 175E                               i2printf@val 0016  
                  ??_EUSART1_Transmit_ISR 0060                     TMR0_ISR@CountCallBack 003E  
             __end_of_EUSART1_Receive_ISR 16D4                                 ?i2_printf 000D  
                   i2EUSART1_Write@txData 0001                          ?_TMR0_StartTimer 0001  
               __end_of_SYSTEM_Initialize 1716                                   ??_putch 0076  
                           _eusart1RxHead 0042                             _eusart1TxHead 0044  
                           _eusart1RxTail 0041                             _eusart1TxTail 0043  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0045  
                      __CFG_CCP2MX$PORTC1 000000          __end_of_TMR0_SetInterruptHandler 1776  
                              ??_TMR0_ISR 001C                        __CFG_CCP3MX$PORTB5 000000  
                                 ?_printf 0081                   __size_of_ADC_Initialize 0016  
                                 _OSCCON2 000FD2                                ??i2_printf 0011  
                                 i2u62_40 1402                                   _OSCTUNE 000F9B  
                                 i2u80_40 126C                                   i2u65_40 14D2  
                                 i2u91_40 133A                                   _SPBRGH1 000FB0  
                                 i2u91_46 133C                                   i2u78_40 11FE  
                                 i2u93_48 137A                                   i2u94_40 16EE  
                                 i2_putch 1780                                   __Hparam 0000  
                                 __Lparam 0000                                   ___lwdiv 138C  
                                 ___lwmod 1432                              __psmallconst 1000  
                                 __pcinit 1716                                   _delayMs 1618  
                                 __ramtop 1000                                   __ptext0 1742  
                                 __ptext1 1536                                   __ptext2 101E  
                                 __ptext3 1750                                   __ptext4 14FA  
                                 __ptext5 1432                                   __ptext6 138C  
                                 __ptext7 1618                                   __ptext8 16FC  
                                 __ptext9 1570                           __size_of_printf 013C  
                               _T0CONbits 000FD5                                   _dpowers 1001  
                   _OSCILLATOR_Initialize 175E                              __size_of_app 003A  
                      _EUSART1_Initialize 15E4                  ??_PIN_MANAGER_Initialize 0075  
              __size_of_SYSTEM_Initialize 001A                            __pintcode_body 1288  
                    end_of_initialization 1722                       ?_EUSART1_Initialize 0001  
                                 int_func 1288                           i2_EUSART1_Write 15AA  
                                 printf@c 008A                                   printf@f 0081  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                      ??_EUSART1_Initialize 0075  
                _TMR0_SetInterruptHandler 176C                                 _PORTBbits 000F81  
                     EUSART1_Write@txData 0075                         i2___lwdiv@divisor 0003  
                               i2___lwdiv 13E0                                 i2___lwmod 14B8  
                       i2___lwdiv@counter 0007              __end_of_INTERRUPT_Initialize 1780  
                       __size_of_TMR0_ISR 0028                            _ADC_Initialize 172C  
                  ?_OSCILLATOR_Initialize 0001                            __end_of_printf 115A  
                            i2printf@flag 0014                              i2printf@prec 0015  
                     start_initialization 1716                  __size_of_TMR0_Initialize 003A  
         __size_of_PIN_MANAGER_Initialize 0042                               __end_of_app 1570  
                               i2printf@c 0018                                 i2printf@f 000D  
                             putch@txData 0076                                ?i2___lwdiv 0001  
                              ?i2___lwmod 0008                         __size_ofi2_printf 012E  
                   __end_of_EUSART1_Write 1536                   __end_ofi2_EUSART1_Write 15E4  
                  __size_of_TMR0_CallBack 005A                    __end_of_ADC_Initialize 1742  
                                ??_printf 0083                            _eusart1RxCount 0040  
                             __pbssCOMRAM 002E             __size_of_EUSART1_Transmit_ISR 002E  
                           __pcstackBANK0 0060                         i2___lwmod@divisor 000A  
                       i2___lwmod@counter 000C              __size_of_EUSART1_Receive_ISR 002C  
                                ?i2_putch 0001                     _TMR0_InterruptHandler 0047  
                __size_of_TMR0_StartTimer 0004                          ___lwdiv@dividend 0075  
                  _PIN_MANAGER_Initialize 1476                                 __pintcode 0008  
                                ?___lwdiv 0075                                  ?___lwmod 007C  
                         ?_ADC_Initialize 0001                               __pintcodelo 0018  
                                ?_delayMs 0075                          __CFG_PRICLKEN$ON 000000  
                             __smallconst 1000                                  _BAUDCON1 000FB8  
                        ___lwdiv@quotient 007A                             _TMR0_CallBack 1332  
                             ??i2___lwdiv 0005                               ??i2___lwmod 000C  
                          __size_of_putch 000E                    TMR0_CallBack@adcresult 001A  
                    _INTERRUPT_Initialize 1776                         ??_TMR0_Initialize 0077  
                        ?i2_EUSART1_Write 0001                                  _LATDbits 000F8C  
                                _IPR1bits 000F9F                                  _PIE1bits 000F9D  
              ??_TMR0_SetInterruptHandler 0077                                  _PIR1bits 000F9E  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR0_ISR 16D4                                _ADCON0bits 000FC2  
                              printf@flag 0086                                printf@prec 0087  
                                i2_printf 115A                            ?_TMR0_CallBack 0001  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                        __size_ofi2_putch 000A                                  __Hrparam 0000  
                                __Lrparam 0000                         _ADC_GetConversion 164A  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTD2 000000  
                 ??_OSCILLATOR_Initialize 0075                        ?_ADC_GetConversion 0001  
                       ??_TMR0_StartTimer 0075               __size_of_EUSART1_Initialize 0034  
                        __size_of___lwdiv 0054                          __size_of___lwmod 0044  
                        __size_of_delayMs 0032                       ??_ADC_GetConversion 0003  
         ??_INTERRUPT_InterruptManagerLow 0060                           ___lwdiv@divisor 0077  
                         ___lwdiv@counter 0079                                  __ptext10 178A  
                                __ptext11 176C                                  __ptext20 16D4  
                                __ptext12 1476                                  __ptext21 1332  
                                __ptext13 175E                                  __ptext30 0000  
                                __ptext22 115A                                  __ptext14 1776  
                                __ptext23 1780                                  __ptext15 15E4  
                                __ptext24 15AA                                  __ptext16 172C  
                                __ptext25 14B8                                  __ptext26 13E0  
                                __ptext18 167A                                  __ptext27 178E  
                                __ptext28 164A                                  __ptext29 16A8  
                           __size_of_main 000E                                  delayMs@i 0078  
    __end_of_TMR0_DefaultInterruptHandler 1790     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 178E                 __end_of_ADC_GetConversion 167A  
                             delayMs@time 0075                                  int$flags 004A  
                               printf@val 0088                       _EUSART1_Receive_ISR 16A8  
                              _INTCONbits 000FF2                           ??_TMR0_CallBack 0019  
                  ??_INTERRUPT_Initialize 0075                                  intlevel1 0000  
                                intlevel2 0000                      ?_EUSART1_Receive_ISR 0001  
                        ___lwmod@dividend 007C                   ?_PIN_MANAGER_Initialize 0001  
                              _RCSTA1bits 000FAB              __end_of_EUSART1_Transmit_ISR 16A8  
                        ??_ADC_Initialize 0075             ?_TMR0_DefaultInterruptHandler 0001  
                                printf@ap 0084                    __size_of_EUSART1_Write 003C  
  __end_of_INTERRUPT_InterruptManagerHigh 1332   __size_of_INTERRUPT_InterruptManagerHigh 132A  
          _INTERRUPT_InterruptManagerHigh 0008                           ___lwmod@divisor 007E  
                         _TMR0_Initialize 1570                           ___lwmod@counter 0080  
                       __CFG_T3CMX$PORTC0 000000     __end_of_INTERRUPT_InterruptManagerLow 00D0  
  __size_of_INTERRUPT_InterruptManagerLow 00B8             _INTERRUPT_InterruptManagerLow 0018  
                   ??_EUSART1_Receive_ISR 0001            __end_of_PIN_MANAGER_Initialize 14B8  
              __size_of_ADC_GetConversion 0030  
